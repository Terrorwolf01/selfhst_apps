<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>GitLab Releases</title>
  <updated>2024-10-07T10:30:26.765396-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.0.0</id>
    <title>New release for GitLab: GitLab 17.0</title>
    <updated>2024-05-16T00:00:00+00:00</updated>
    <author>
      <name>gitlab-org/gitlab-foss</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="26 new features" src="https://img.shields.io/static/v1?color=108548&amp;amp;label=new+features&amp;amp;labelColor=525252&amp;amp;message=26&amp;amp;style=for-the-badge" title="New features added in this release" /&gt;
&lt;img alt="2184 total badges" src="https://img.shields.io/static/v1?color=1F75CB&amp;amp;label=total+features&amp;amp;labelColor=525252&amp;amp;message=2184&amp;amp;style=for-the-badge" title="Total features" /&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;[GitLab chart improvements](https://docs.gitlab.com/charts/) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Cloud Native Installation&lt;/code&gt;&lt;/summary&gt;

&gt; The [GitLab Operator](https://docs.gitlab.com/operator/) is now available for production use for cloud-native hybrid installations. See the [installation documentation](https://docs.gitlab.com/operator/installation.html) before adopting the GitLab Operator.
&gt; 
&gt; Support for a fallback to BusyBox images when you specify custom BusyBox values (`global.busybox`) is removed. Support for BusyBox-based init containers was deprecated in GitLab 16.2 (Helm chart 7.2) in favor of a common GitLab-based init image.
&gt; 
&gt; Support for `gitlab.kas.privateApi.tls.enabled` and `gitlab.kas.privateApi.tls.secretName` is also removed. You must use `global.kas.tls.enabled` and `global.kas.tls.secretName` instead.
&gt; 
&gt; The deprecated queue selector and negate options are removed from the Sidekiq chart.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Linux package improvements](https://docs.gitlab.com/omnibus/) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Omnibus Package&lt;/code&gt;&lt;/summary&gt;

&gt; CentOS Linux 7 will reach [end of life](https://www.redhat.com/en/topics/linux/centos-linux-eol) on June 30, 2024. This makes GitLab 17.6 the last GitLab version in which we can provide packages for CentOS 7.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Two database mode is available in Beta](https://docs.gitlab.com/ee/administration/postgresql/multiple_databases.html#migrate-existing-installations-using-a-script) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Cell&lt;/code&gt;&lt;/summary&gt;

&gt; Currently, most self-managed customers only utilize a single database.
&gt; In order to ensure that the setup between GitLab.com and self-managed is the same, we ask self-managed customers to migrate and run two databases by default.
&gt; In 16.0, two database connections became the default for self-managed installations.
&gt; In 17.0, we [release two database mode as a limited Beta](https://docs.gitlab.com/ee/administration/postgresql/multiple_databases.html), with the goal to make running decomposed generally available by 19.0.
&gt; Migration to two databases remains optional in 17.0, but needs to be performed before upgrading to 19.0.
&gt; 
&gt; The migration requires downtime.
&gt; Self-managed customers can use a [tool](https://gitlab.com/gitlab-org/gitlab/-/issues/368729) that executes this migration with some downtime.
&gt; We introduced a new `gitlab-ctl` command that allows you to upgrade your single-database GitLab instances to a decomposed setup.
&gt; This setup contains commands that will work with our Linux package.
&gt; The [actual migration](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/135585) (copying the database) is part of a rake task in the GitLab project.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Private shared group members are listed on Members tab for all members](https://docs.gitlab.com/ee/user/project/members/sharing_projects_groups.html): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, when a public group or project invited a private group, the private group was listed only in the Groups tab of the Members page, and private members were not visible to members of the public group. To enable better collaboration between members of these groups, we are now also listing all invited group members in the Members tab, including members from private invited groups. The source of membership will be masked from members that do not have access to the private group. However, the source of membership will be visible to users who have at least the Maintainer role in the project or Owner role in the group, so that they can manage members in their project or group. If the current user viewing the Members tab is unauthenticated or not a member of the group or project, they will not see the private group members. We hope this change will make it easier for group and project members to understand at a glance who has access to a group or project.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Members page displays members from invited groups](https://docs.gitlab.com/ee/user/project/members/#add-groups-to-a-project): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, members of groups that were invited to a group or project were visible only in the Groups tab of the Members page. This meant users had to check both the Groups and Members tabs to understand who has access to a certain group or project. Now, shared members are listed also in the Members tab, giving a complete overview of all the members that are part of a group or project at a glance.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Increase Kubernetes agent authorization limit](https://docs.gitlab.com/ee/user/clusters/agent/): &lt;code&gt;Continuous Delivery&lt;/code&gt;&lt;/summary&gt;

&gt; With the GitLab agent for Kubernetes, you can share a single agent connection with a group. We aim to support a single agent across a large multi-tenant cluster. However, you might have faced a limitation on the number of connection sharing. Until now, an agent could be shared with only 100 projects and groups using [CI/CD](https://docs.gitlab.com/ee/user/clusters/agent/ci_cd_workflow.html), and 100 projects and groups using the [`user_access`](https://docs.gitlab.com/ee/user/clusters/agent/user_access.html) keyword. In GitLab 17.0, the number of projects and groups you can share with is raised to 500.
&gt; 
&gt; If you need to run multiple agents in a cluster, we would like to hear your feedback in [issue 454110](https://gitlab.com/gitlab-org/gitlab/-/issues/454110).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Support for GitLab agent for Kubernetes in FIPS mode](https://docs.gitlab.com/ee/administration/clusters/kas.html) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Continuous Delivery&lt;/code&gt;&lt;/summary&gt;

&gt; From GitLab 17.0, you can install GitLab in FIPS mode with the agent for Kubernetes components enabled. Now, FIPS-compliant users can benefit from all the [Kubernetes integrations with GitLab](https://docs.gitlab.com/ee/user/clusters/agent/).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Track fast-forward merge requests in deployments](https://docs.gitlab.com/ee/ci/environments/#track-newly-included-merge-requests-per-deployment): &lt;code&gt;Continuous Delivery&lt;/code&gt;&lt;/summary&gt;

&gt; In past releases, merge requests were tracked in a deployment only if the project's merge method was **Merge commit** or **Merge commit with semi-linear history**. From GitLab 17.0, merge requests are tracked in deployments, including in projects with the merge method **Fast-forward merge**.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Import from Bitbucket Cloud by using REST API](https://docs.gitlab.com/ee/api/import.html#import-repository-from-bitbucket-cloud): &lt;code&gt;Importers&lt;/code&gt;&lt;/summary&gt;

&gt; In this milestone, we added the ability to import Bitbucket Cloud projects by using the REST API.
&gt; 
&gt; This can be a better solution for importing a lot of projects than importing by using the UI.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Re-import a chosen project relation by using the API](https://docs.gitlab.com/ee/api/project_import_export#import-a-single-relation): &lt;code&gt;Importers&lt;/code&gt;&lt;/summary&gt;

&gt; When importing projects from export files with many items of the same type (for example, merge requests or pipelines), sometimes some of those items weren't imported.
&gt; 
&gt; In this release, we added an API endpoint that re-imports a named relation, skipping items that have already been imported. The API requires both:
&gt; 
&gt; - A project export archive. 
&gt; - A type (issues, merge requests, pipelines, or milestones).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Indicate that items were imported using direct transfer](https://docs.gitlab.com/ee/user/group/import/#review-results-of-the-import): &lt;code&gt;Importers&lt;/code&gt;&lt;/summary&gt;

&gt; You can migrate GitLab groups and projects between GitLab instances [by using direct transfer](https://docs.gitlab.com/ee/user/group/import/).
&gt; 
&gt; Until now, imported items were not easily identifiable. With this release, we've added visual indicators to items imported with direct transfer, where the creator is identified as a specific user:
&gt; 
&gt; - Notes (system notes and user comments)
&gt; - Issues
&gt; - Merge requests
&gt; - Epics
&gt; - Designs
&gt; - Snippets
&gt; - User profile activity

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/plan/"&gt;Plan&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Design Management features extended to Product teams](https://docs.gitlab.com/ee/user/project/issues/design_management.html): &lt;code&gt;Design Management&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab is expanding collaboration by updating our permissions. Now, users with the Reporter role can access Design Management features, enabling product teams to engage more directly in the design process. This change simplifies workflows and accelerates innovation by inviting broader participation from across your organization.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Milestones and iterations visible on issue boards](https://docs.gitlab.com/ee/user/project/issue_board.html): &lt;code&gt;Team Planning&lt;/code&gt;&lt;/summary&gt;

&gt; We've improved issue boards to offer you clearer insights into your project's timeline and phases. Now, with milestone and iteration details directly visible on issue cards, you can easily track progress and adjust your team's workload on the fly. This enhancement is designed to make your planning and execution more efficient, keeping you in the loop and ahead of schedule.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/create/"&gt;Create&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Commit signing for GitLab UI commits](https://docs.gitlab.com/ee/administration/gitaly/configure_gitaly.html#configure-commit-signing-for-gitlab-ui-commits) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Source Code Management&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, web commits and automated commits made by GitLab could not be signed. Now you can configure your self-managed instance with a signing key, a committer name, and email address to sign web and automated commits.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/verify/"&gt;Verify&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[CI/CD Catalog with components and inputs now generally available](https://docs.gitlab.com/ee/ci/components/#cicd-catalog): &lt;code&gt;Pipeline Composition&lt;/code&gt;&lt;/summary&gt;

&gt; The CI/CD Catalog is now generally available. As part of this release, we're also making [CI/CD components](https://docs.gitlab.com/ee/ci/components/) and [inputs](https://docs.gitlab.com/ee/ci/yaml/inputs.html) generally available.
&gt; 
&gt; With the CI/CD Catalog, you gain access to a vast array of components created by the community and industry experts.
&gt; Whether you're seeking solutions for continuous integration, deployment pipelines, or automation tasks, you'll find a diverse selection of components tailored to suit your requirements.
&gt; You can read more about the Catalog and its features in the following [blog post](https://about.gitlab.com/blog/2024/05/08/ci-cd-catalog-goes-ga-no-more-building-pipelines-from-scratch/).
&gt; 
&gt; You're invited to contribute CI/CD components to the Catalog and help expand this new and growing part of GitLab.com!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Add a group to the CI/CD job token allowlist](https://docs.gitlab.com/ee/ci/jobs/ci_job_token.html#control-job-token-access-to-your-project): &lt;code&gt;Secrets Management&lt;/code&gt;&lt;/summary&gt;

&gt; Introduced in GitLab 15.9, the CI/CD job token allowlist prevents unauthorized access from other projects to your project. Previously, you could allow access at the project level from other specific projects only, with a maximum limit of 200 total projects. 
&gt; 
&gt; In GitLab 17.0, you can now add groups to a project's CI/CD job token allowlist. The maximum limit of 200 now applies to both projects and groups, meaning a project allowlist can now have up to 200 projects and groups authorized for access. This improvement makes it easier to add large numbers of projects associated with a group. 

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Enhanced context control with the `rules:exists` CI/CD keyword](https://docs.gitlab.com/ee/ci/yaml/#rulesexistsproject): &lt;code&gt;Pipeline Composition&lt;/code&gt;&lt;/summary&gt;

&gt; The `rules:exists` CI/CD keyword has default behaviors that vary based on where the keyword is defined, which can make it harder to use with more complex pipelines. When defined in a job, `rules:exists` searches for specified files in the project running the pipeline. However, when defined in an `include` section, `rules:exists` searches for specified files in the project hosting the configuration file containing the `include` section. If configuration is split over multiple files and projects, it can be hard to know which exact project will be searched for defined files.
&gt; 
&gt; In this release, we have introduced `project` and `ref` subkeys to `rules:exists`, providing you a way to explicitly control the search context for this keyword. These new subkeys help you ensure accurate rule evaluation by precisely specifying the search context, mitigating inconsistencies, and enhancing clarity in your pipeline rule definitions.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Semantic version ranges for published CI/CD components](https://docs.gitlab.com/ee/ci/components/#semantic-versioning): &lt;code&gt;Pipeline Composition&lt;/code&gt;&lt;/summary&gt;

&gt; When using a CI/CD Catalog component, you might want to have it automatically use the latest version. For example, you don't want to have to manually monitor all the components you use and manually switch to the next version every time there is a minor update or security patch. But using `~latest` is also a bit risky because minor version updates could have undesired behavior changes, and major version updates have a higher risk of breaking changes.
&gt; 
&gt; With this release, you can opt to use the latest major or minor version of a CI/CD component. For example, specify `2` for the component version, and you'll get all updates for that major version, like `2.1.1`, `2.1.2`, `2.2.0`, but not `3.0.0`. Specify `2.1` and you'll only get patch updates for that minor version, like `2.1.1`, `2.1.2`, but not `2.2.0`.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Standardized CI/CD Catalog component publishing process](https://docs.gitlab.com/ee/ci/components/#publish-a-new-release): &lt;code&gt;Pipeline Composition&lt;/code&gt;&lt;/summary&gt;

&gt; We have been hard at work on CI/CD components, including making the process of releasing components to the CI/CD Catalog a consistent experience. As part of that work, we've made releasing versions from a CI/CD job with the [`release` keyword](https://docs.gitlab.com/ee/ci/yaml/index.html#release) and the `release-cli` image the only method. All improvements to the release process will apply to this method only. To avoid breaking changes introduced by this restriction, make sure you always use the latest version of the image (`release-cli:latest`) or at least a version greater than `v0.17`. The [**Releases** option in the UI](https://docs.gitlab.com/ee/user/project/releases/#create-a-release-in-the-releases-page) is now disabled for CI/CD component projects.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Always run `after_script` commands for canceled jobs](https://docs.gitlab.com/ee/ci/yaml/script/#run-after_script-on-cancel): &lt;code&gt;Continuous Integration (CI)&lt;/code&gt;&lt;/summary&gt;

&gt; The [`after_script`](https://docs.gitlab.com/ee/ci/yaml/#after_script) CI/CD keyword is used to run additional commands after the main `script` section of a job. This is often used for cleaning up environments or other resources that were used by the job. However, `after_script` commands did not run if a job was canceled.
&gt; 
&gt; As of GitLab 17.0, `after_script` commands will always run when a job is canceled. To opt out, see the [documentation](https://docs.gitlab.com/ee/ci/yaml/script/#run-after_script-on-cancel).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[GitLab Runner 17.0](https://docs.gitlab.com/runner): &lt;code&gt;GitLab Runner Core&lt;/code&gt;&lt;/summary&gt;

&gt; We’re also releasing GitLab Runner 17.0 today! GitLab Runner is the lightweight, highly-scalable agent that runs your CI/CD jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.
&gt; 
&gt; #### What's new:
&gt; 
&gt; - [Documentation for installing the Runner Operator in disconnected network environments](https://gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/-/issues/123)
&gt; 
&gt; The list of all changes is in the GitLab Runner [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-runner/blob/17-0-stable/CHANGELOG.md).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/package/"&gt;Package&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Filter package registry UI for packages with errors](https://docs.gitlab.com/ee/user/packages/package_registry/#view-packages): &lt;code&gt;Package Registry&lt;/code&gt;&lt;/summary&gt;

&gt; You can use the GitLab package registry to publish and download packages. Sometimes, packages fail to upload due to an error. Previously, there was no way to quickly view packages that failed to upload. This made it challenging to get a holistic view of your organization's package registry.
&gt; 
&gt; Now you can filter the package registry UI for packages that failed to upload. This improvement makes it easier to investigate and resolve any issues you encounter.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/secure/"&gt;Secure&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Streamlined SAST analyzer coverage for more languages](https://docs.gitlab.com/ee/user/application_security/sast/#supported-languages-and-frameworks): &lt;code&gt;SAST&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab Static Application Security Testing (SAST) now scans the same [languages](https://docs.gitlab.com/ee/user/application_security/sast/#supported-languages-and-frameworks) with fewer [analyzers](https://docs.gitlab.com/ee/user/application_security/sast/analyzers/), offering a simpler, more customizable scan experience.
&gt; 
&gt; In GitLab 17.0, we've replaced language-specific analyzers with [GitLab-managed rules](https://docs.gitlab.com/ee/user/application_security/sast/rules.html) in the [Semgrep-based analyzer](https://gitlab.com/gitlab-org/security-products/analyzers/semgrep) for the following languages:
&gt; 
&gt; - Android
&gt; - C and C++
&gt; - iOS
&gt; - Kotlin
&gt; - Node.js
&gt; - PHP
&gt; - Ruby
&gt; 
&gt; As [announced](https://docs.gitlab.com/ee/update/deprecations.html#sast-analyzer-coverage-changing-in-gitlab-170), we've updated the [SAST CI/CD template](https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/SAST.gitlab-ci.yml) to reflect the new scanning coverage and to remove language-specific analyzer jobs that are no longer used.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/monitor/"&gt;Monitor&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Multiple external participants for Service Desk](https://docs.gitlab.com/ee/user/project/service_desk/external_participants.html): &lt;code&gt;Service Desk&lt;/code&gt;&lt;/summary&gt;

&gt; Sometimes there is more than one person involved in resolving a support ticket or
&gt; the requester wants to keep colleagues up-to date on the state of the ticket.
&gt; 
&gt; Now you can have a maximum of 10 external participants without a GitLab account on a
&gt; Service Desk ticket and regular issues.
&gt; 
&gt; External participants receive Service Desk notification emails for each public comment
&gt; on the ticket, and their replies will appear as comments in the GitLab UI. 
&gt; 
&gt; Simply use the quick actions [`/add_email`](https://docs.gitlab.com/ee/user/project/service_desk/external_participants.html#add-an-external-participant)
&gt; and [`remove_email`](https://docs.gitlab.com/ee/user/project/service_desk/external_participants.html#add-an-external-participant)
&gt; to add or remove external participants with a few keystrokes.
&gt; 
&gt; You can also configure GitLab to
&gt; [add all email addresses from the `Cc` header](https://docs.gitlab.com/ee/user/project/service_desk/external_participants.html#add-external-participants-from-the-cc-header)
&gt; of the initial email to the Service Desk ticket.
&gt; 
&gt; You can [tailor all Service Desk email templates to your liking](https://docs.gitlab.com/ee/user/project/service_desk/configure.html#customize-emails-sent-to-external-participants),
&gt; using markdown, HTML, and dynamic placeholders.
&gt; An [unsubscribe link placeholder](https://docs.gitlab.com/ee/user/project/service_desk/external_participants.html#add-an-external-participant)
&gt; is available to make it easy for external participants to opt out of a conversation.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/govern/"&gt;Govern&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Identify sessions initiated by Admin Mode](https://docs.gitlab.com/ee/administration/settings/sign_in_restrictions#check-if-your-session-has-admin-mode-enabled) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;User Management&lt;/code&gt;&lt;/summary&gt;

&gt; As an instance administrator, when you use multiple browsers or different computers, it is difficult to know which sessions are in Admin Mode and which aren't. Now, administrators can go to **User Settings &gt; Active Sessions** to identify which sessions use Admin Mode.
&gt; 
&gt; Thank you [Roger Meier](https://gitlab.com/bufferoverflow) for your contribution! 

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Automatic deletion of unverified secondary email addresses](https://docs.gitlab.com/ee/user/profile/#delete-emails-from-your-user-profile): &lt;code&gt;User Management&lt;/code&gt;&lt;/summary&gt;

&gt; If you add a secondary email address to your user profile and do not verify it, that email address is now automatically deleted after three days. Previously, these email addresses were in a reserved state and could not be released without manual intervention. This automatic deletion reduces administrator overhead and prevents users from reserving email addresses that they do not have ownership of.

&lt;/details&gt;</content>
    <link href="https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.0.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.1.0</id>
    <title>New release for GitLab: GitLab 17.1</title>
    <updated>2024-06-20T00:00:00+00:00</updated>
    <author>
      <name>gitlab-org/gitlab-foss</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="29 new features" src="https://img.shields.io/static/v1?color=108548&amp;amp;label=new+features&amp;amp;labelColor=525252&amp;amp;message=29&amp;amp;style=for-the-badge" title="New features added in this release" /&gt;
&lt;img alt="2213 total badges" src="https://img.shields.io/static/v1?color=1F75CB&amp;amp;label=total+features&amp;amp;labelColor=525252&amp;amp;message=2213&amp;amp;style=for-the-badge" title="Total features" /&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;[Omnibus improvements](https://docs.gitlab.com/omnibus/) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Omnibus Package&lt;/code&gt;&lt;/summary&gt;

&gt; Gitlab 17.1 includes packages for supporting [Ubuntu Noble 24.04](https://docs.gitlab.com/ee/administration/package_information/supported_os.html).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[New placeholders for group and project badges](https://docs.gitlab.com/ee/user/project/badges.html#placeholders): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; You can now create badge links and image URLs using four new placeholders:
&gt; 
&gt; - `%{project_namespace}` - referencing the full path of a project namespace
&gt; - `%{group_name}` - referencing the group name
&gt; - `%{gitlab_server}` - referencing the group's or project's server name
&gt; - `%{gitlab_pages_domain}` - referencing the group's or project's domain name
&gt; 
&gt; Thank you [@TamsilAmani](https://gitlab.com/TamsilAmani) for this community contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[New `%{latest_tag}` placeholder for badges](https://docs.gitlab.com/ee/user/project/badges.html#placeholders): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; You can now create badge links and image URLs using a `%{latest_tag}` placeholder. This placeholder references the latest tag that was published for a repository.
&gt; 
&gt; Thank you [@TamsilAmani](https://gitlab.com/TamsilAmani) for this community contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[List contributed projects of a user with GraphQL API](https://docs.gitlab.com/ee/api/graphql/reference/index.html#usercontributedprojects): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; You can now use the new GraphQL API field `User.contributedProjects` to list the projects a user has contributed to.
&gt; 
&gt; Thank you [@yasuk](https://gitlab.com/yasuk) for this community contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Add members by username with the Members API](https://docs.gitlab.com/ee/api/members.html#add-a-member-to-a-group-or-project): &lt;code&gt;User Management&lt;/code&gt;, &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, when using the Members API, you could add members to groups and projects only by their user ID. With this release, you can now add members also by their username.
&gt; 
&gt; Thank you [@imskr](https://gitlab.com/imskr) for this community contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Updated sorting and filtering functionality in Explore](https://docs.gitlab.com/ee/user/project/working_with_projects.html#search-in-projects): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; We have updated the sorting and filtering functionality of the group and project Explore pages. The filtering bar is now wider for better readability. 
&gt; 
&gt; In the Explore page for projects, you can now use standardized sorting options that include **Name**, **Created date**, **Updated date**, and **Stars**, and a navigation element to sort in ascending or descending order. The language filter has moved to the filter menu. A new **Inactive** tab displays archived projects for a more focused search. Additionally, you can use a **Role** filter to search for projects you are the Owner of.
&gt; 
&gt; In the Explore page for groups, we have standardized the sorting options to include **Name**, **Created date**, and **Updated date**, and added a navigation element to sort in ascending or descending order.
&gt; 
&gt; We welcome feedback about these changes in [issue 438322](https://gitlab.com/gitlab-org/gitlab/-/issues/438322).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Improved visibility level selection](https://docs.gitlab.com/ee/user/public_access.html#change-group-visibility): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, a group's or project's general settings displayed only permitted visibility levels. This view often confused users who tried to understand why the other options were not available, and could lead to information being displayed incorrectly. The new view shows all visibility levels, greying out the options that are not available for selection. In addition, a popover gives further context about why an option is not available. For example, a visibility level could be unavailable because an administrator restricted it, or it would cause a conflict with a project's or parent group's visibility setting.
&gt; 
&gt; We hope these changes help you resolve the conflicts in selecting your desired visibility option. Thank you [@gerardo-navarro](https://gitlab.com/gerardo-navarro) for this community contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Show Release RSS icon on Releases page](https://docs.gitlab.com/ee/user/project/releases/#track-releases-with-an-rss-feed): &lt;code&gt;Release Orchestration&lt;/code&gt;&lt;/summary&gt;

&gt; Do you need to be notified when a new release is posted? GitLab now provides an RSS feed for releases. You can subscribe to a release feed with the RSS icon on the project release page.
&gt; 
&gt; Thanks to [Martin Schurz](https://gitlab.com/schurzi) for the contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Use REST API to cancel a running direct transfer migration](https://docs.gitlab.com/ee/api/bulk_imports.html#cancel-a-migration): &lt;code&gt;Importers&lt;/code&gt;&lt;/summary&gt;

&gt; Until now cancelling a running direct transfer migration
&gt; [required access to a Rails console](https://docs.gitlab.com/ee/user/group/import/direct_transfer_migrations.html#cancel-a-running-import).
&gt; 
&gt; In this release, we've added the ability for Administrators to cancel a migration by using the REST API.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Re-import a chosen project relation by using the API](https://docs.gitlab.com/ee/api/project_import_export#import-a-single-relation): &lt;code&gt;Importers&lt;/code&gt;&lt;/summary&gt;

&gt; When importing projects from export files with many items of the same type (for example, merge requests or pipelines), sometimes some of those items aren't imported.
&gt; 
&gt; In this release, we've added an API endpoint that re-imports a named relation, skipping items that have already been imported. The API requires both:
&gt; 
&gt; - A project export archive.
&gt; - A type. Either issues, merge requests, pipelines, or milestones.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Keep inherited membership structure when importing by direct transfer](https://docs.gitlab.com/ee/user/group/import/#memberships): &lt;code&gt;Importers&lt;/code&gt;&lt;/summary&gt;

&gt; Until now, [inherited memberships](https://docs.gitlab.com/ee/user/project/members/#inherited-membership) were not imported reliably when migrating
&gt; by direct transfer. This meant that inherited members of projects were imported as direct members.
&gt; 
&gt; From this release, GitLab now first migrates group membership before migrating project memberships. This replicates the inherited memberships on
&gt; the source GitLab instance.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Use the REST API to set custom webhook headers](https://docs.gitlab.com/ee/api/projects.html#set-a-custom-header): &lt;code&gt;API&lt;/code&gt;, &lt;code&gt;Webhooks&lt;/code&gt;&lt;/summary&gt;

&gt; In GitLab 16.11, we introduced the ability to
&gt; [add custom headers when you create or edit a webhook](https://about.gitlab.com/releases/2024/04/18/gitlab-16-11-released/#custom-webhook-headers).
&gt; 
&gt; With this release, you can now use the GitLab REST API to set custom webhook headers.
&gt; 
&gt; Thanks to [Niklas](https://gitlab.com/Taucher2003) for [this community contribution](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/153768)!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Backups include external merge request diffs stored on disk](https://docs.gitlab.com/ee/administration/backup_restore/backup_gitlab.html#command-line-interface) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Backup/Restore of GitLab instances&lt;/code&gt;&lt;/summary&gt;

&gt; The `gitlab-backup` tool now supports backing up [external merge request diffs](https://docs.gitlab.com/ee/administration/merge_request_diffs.html) stored on local disk. Note, the `gitlab-backup` tool does not backup files stored on object storage. Therefore, if external merge diffs are stored on object storage they will need to be backed up manually. 
&gt; 
&gt; The `backup-utility` for Cloud Native Hybrid environments already supported backing up external merge request diffs and this functionality remains unchanged. 

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/plan/"&gt;Plan&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Improved wiki user experience](https://docs.gitlab.com/ee/user/project/wiki/): &lt;code&gt;Wiki&lt;/code&gt;&lt;/summary&gt;

&gt; The wiki feature in GitLab 17.1 provides a more unified and efficient workflow:
&gt; 
&gt; - [Easier and quicker cloning](https://gitlab.com/gitlab-org/gitlab/-/issues/281830) with a new repository clone button. This improves collaboration, and speeds up access to the wiki content for editing or viewing. 
&gt; - [A more obvious delete option](https://gitlab.com/gitlab-org/gitlab/-/issues/335169) in a more discoverable location. This reduces the time spent searching for it, and minimizes potential errors or confusion when managing wiki pages. 
&gt; - [Allowing empty pages to be valid](https://gitlab.com/gitlab-org/gitlab/-/issues/221061), improving flexibility. Create empty placeholders when you need them. Focus on better planning and organization of wiki content, and fill in the empty pages later.
&gt; 
&gt; These enhancements improve ease of use, discoverability, and content management in your wiki's workflow. We want your wiki experience to be efficient and user-friendly. By making cloning repositories more accessible, relocating key options for better visibility, and allowing for the creation of empty placeholders, we're refining our platform to better meet your users' needs.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Downscale pasted images on image upload](https://docs.gitlab.com/ee/user/markdown.html#change-the-image-or-video-dimensions): &lt;code&gt;Team Planning&lt;/code&gt;, &lt;code&gt;Portfolio Management&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab 17.1 enhances the handling of high-resolution images, enabling them to be downscaled during upload. Previously, images displayed in their original size, resulting in suboptimal display quality. This improvement ensures large images don't break the visual flow of the pages they are included in. 

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Draggable media in the rich text editor](https://docs.gitlab.com/ee/user/rich_text_editor.html): &lt;code&gt;Team Planning&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, moving media in the rich text editor required you to copy and paste each item manually. This often slowed down the inclusion of media in issues, epics, and wikis. In GitLab 17.1, you can now drag and drop media in the rich text editor, significantly enhancing efficiency during editing.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Pages support for mutual TLS in GitLab API calls](https://docs.gitlab.com/ee/administration/pages/#support-mutual-tls-when-calling-the-gitlab-api) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Pages&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab can be configured to [enforce client authentication with SSL certificates](https://docs.gitlab.com/omnibus/settings/ssl/#enable-2-way-ssl-client-authentication). However, the GitLab Pages service was incompatible with that feature, because it couldn't be configured to use client certificates, and calls to the internal API were rejected.
&gt; 
&gt; From GitLab 17.1, you can configure a client certificate for GitLab Pages. This allows you to enable client authentication with the GitLab API, strengthening the security of your GitLab instance.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Redirect wiki pages to new URL when renamed](https://docs.gitlab.com/ee/user/project/wiki/): &lt;code&gt;Wiki&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab 17.1 introduces a significant enhancement to wiki page redirects. When you rename a wiki page, anyone trying to access the old page is automatically redirected to the new page, ensuring all existing links remain functional. This improvement streamlines the workflow for managing page name changes and enhances the overall knowledge management experience.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Updated Pages UI](https://docs.gitlab.com/ee/user/project/pages/): &lt;code&gt;Pages&lt;/code&gt;&lt;/summary&gt;

&gt; In GitLab 17.1 we've improved the Pages user interface. Improvements include more efficient use of screen space. These UI improvements are focused on improving user experience and efficiency when managing Pages.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Real-time board updates for a smoother workflow](https://docs.gitlab.com/ee/user/project/issue_board.html): &lt;code&gt;Portfolio Management&lt;/code&gt;&lt;/summary&gt;

&gt; You'll now notice a smoother experience when updating issues on [boards](https://docs.gitlab.com/ee/user/project/issue_board.html)! Changes you make in the sidebar will instantly appear on the board itself, no more refreshing required. This reactive boards experience streamlines your workflow, allowing you to quickly make updates while seeing them reflected in real-time.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Track time on tasks](https://docs.gitlab.com/ee/user/project/time_tracking.html): &lt;code&gt;Team Planning&lt;/code&gt;&lt;/summary&gt;

&gt; With this release, you can now set time estimates and record time spent on tasks with a [quick action](https://docs.gitlab.com/ee/user/project/quick_actions.html) or in the time tracking widget in the task's sidebar. Time spent on a task can be viewed with the task's time tracking report.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/create/"&gt;Create&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Disable diff previews in code review emails](https://docs.gitlab.com/ee/user/group/manage#disable-diff-previews-in-email-notifications): &lt;code&gt;Code Review Workflow&lt;/code&gt;&lt;/summary&gt;

&gt; When you review code in a merge request and comment on a line of code, GitLab includes a few lines of the diff in the email notification to participants. Some organizational policies treat email as a less secure system, or might not control their own infrastructure for email. This can present risks to IP or access control of source code.
&gt; 
&gt; New settings are available in groups and projects to enable organizations to remove diff previews from merge request emails. This can help ensure that sensitive information isn't available outside of GitLab.
&gt; 
&gt; A gigantic thank you to [Joe Snyder](https://gitlab.com/joe-snyder) for contributing this!

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/verify/"&gt;Verify&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[GitLab Runner Autoscaler is generally available](https://docs.gitlab.com/runner/runner_autoscale/): &lt;code&gt;GitLab Runner Core&lt;/code&gt;&lt;/summary&gt;

&gt; In earlier versions of GitLab, some customers needed an autoscaling solution for GitLab Runner on virtual machine instances on public cloud platforms. These customers had to rely on the legacy [Docker Machine executor](https://docs.gitlab.com/runner/configuration/autoscale.html) or custom solutions stitched together by using cloud provider technologies.
&gt; 
&gt; Today, we're pleased to announce the general availability of the GitLab Runner Autoscaler. The GitLab Runner Autoscaler is composed of GitLab-developed taskscaler and [fleeting](https://docs.gitlab.com/runner/fleet_scaling/fleeting.html) technologies and the cloud provider plugin for Google Compute Engine.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Require confirmation for manual jobs](https://docs.gitlab.com/ee/ci/jobs/job_control.html#add-a-confirmation-dialog-for-manual-jobs): &lt;code&gt;Continuous Integration (CI)&lt;/code&gt;&lt;/summary&gt;

&gt; Manual jobs can be used to trigger highly critical operations in your CI pipeline, such as deploying to production. With this release, you can now configure a manual job to require confirmation before it runs. Use `manual_confirmation` with `when: manual` to display a confirmation dialog in the UI when a job is run manually. Requiring confirmation for manual jobs provides an additional layer of security and control.
&gt; 
&gt; Special thanks to [Phawin](https://gitlab.com/lifez) for this community contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Enhanced control over who can override user-defined variables](https://docs.gitlab.com/ee/ci/variables/#restrict-who-can-override-variables-by-user-minimum-role): &lt;code&gt;Secrets Management&lt;/code&gt;&lt;/summary&gt;

&gt; To better control who can override user-defined variables, we are introducing the `ci_pipeline_variables_minimum_role` project setting. This new setting provides greater flexibility than the existing [`restrict_user_defined_variables`](https://docs.gitlab.com/ee/ci/variables/#restrict-who-can-override-variables) setting. You can now restrict override permissions to no users, or only users with at least the Developer, Maintainer, or Owner roles. 

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[GitLab Runner 17.1 released](https://docs.gitlab.com/runner): &lt;code&gt;GitLab Runner Core&lt;/code&gt;&lt;/summary&gt;

&gt; Today we're releasing GitLab Runner 17.1! GitLab Runner is the lightweight, highly scalable agent that runs your CI/CD jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.
&gt; 
&gt; #### What's new:
&gt; 
&gt; - [GitLab Runner fleeting plugin for GCP Compute Engine](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/29221)
&gt; 
&gt; #### Bug Fixes:
&gt; 
&gt; - [Runner helper images missing the entry point](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/37689)
&gt; 
&gt; The list of all changes is in the GitLab Runner [change log](https://gitlab.com/gitlab-org/gitlab-runner/blob/17-1-stable/CHANGELOG.md).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/modelops/"&gt;Modelops&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Model registry available in beta](https://docs.gitlab.com/ee/user/project/ml/model_registry/): &lt;code&gt;MLOps&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab now officially supports model registry in beta as a first-class concept. You can add and edit models directly via the UI, or use the MLflow integration to use GitLab as a model registry backend.
&gt; 
&gt; A model registry is a hub that helps data science teams manage machine learning models and their related metadata. It serves as a centralized location for organizations to store, version, document, and discover trained machine learning models. It ensures better collaboration, reproducibility, and governance over the entire model lifecycle.
&gt; 
&gt; We think of the model registry as a cornerstone concept that enables teams to collaborate, deploy, monitor, and continuously train models, and are very interested in your feedback. Please feel free to drop us a note in our [feedback issue](https://gitlab.com/gitlab-org/gitlab/-/issues/465405) and we'll get back in touch!

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/govern/"&gt;Govern&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Administrators can search users by partial email address](https://docs.gitlab.com/ee/administration/admin_area.html#administering-users) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;User Management&lt;/code&gt;&lt;/summary&gt;

&gt; Administrators can now search users by partial email address in the User overview of the Admin Area. For instance, you can filter users by a specific email domain to find all users from a distinct institution. This feature is limited to administrators to prevent unprivileged users from accessing email addresses of other accounts.
&gt; 
&gt; Thanks [@zzaakiirr](https://gitlab.com/zzaakiirr) for this community contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Project Owners receive expiring access token notifications](https://docs.gitlab.com/ee/security/token_overview.html#project-access-tokens): &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; Both project Owners and Maintainers with direct membership now receive email notifications when their project access tokens are close to expiring. Previously, only project Maintainers received this notification. This helps keep more people informed about upcoming token expiration.
&gt; 
&gt; Thank you [Jacob Henner](https://gitlab.com/arcesium-henner) for your contribution!

&lt;/details&gt;</content>
    <link href="https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.1.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.2.0</id>
    <title>New release for GitLab: GitLab 17.2</title>
    <updated>2024-07-18T00:00:00+00:00</updated>
    <author>
      <name>gitlab-org/gitlab-foss</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="20 new features" src="https://img.shields.io/static/v1?color=108548&amp;amp;label=new+features&amp;amp;labelColor=525252&amp;amp;message=20&amp;amp;style=for-the-badge" title="New features added in this release" /&gt;
&lt;img alt="2233 total badges" src="https://img.shields.io/static/v1?color=1F75CB&amp;amp;label=total+features&amp;amp;labelColor=525252&amp;amp;message=2233&amp;amp;style=for-the-badge" title="Total features" /&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;[Improved sorting and filtering in group overview](https://docs.gitlab.com/ee/user/group/#view-a-group): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; We have updated the sorting and filtering functionality of the group overview page. The search element now stretches across the whole page, allowing you to see your search strings better. We have standardized the sorting options to `Name`, `Created date`, `Updated date`, and `Stars`.
&gt; 
&gt; We welcome feedback about these changes in [issue 438322](https://gitlab.com/gitlab-org/gitlab/-/issues/438322).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[List groups that a group was invited to using the Groups API](https://docs.gitlab.com/ee/api/groups.html#list-a-groups-shared-groups): &lt;code&gt;API&lt;/code&gt;, &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; We added a new endpoint to the Groups API to list the groups a group has been invited to.
&gt; This functionality complements the [endpoint to list the projects that a group has been invited to](https://docs.gitlab.com/ee/api/groups.html#list-a-groups-shared-projects), so you can now get a complete overview of all the groups and projects that your group has been added to.
&gt; The endpoint is rate-limited to 60 requests per minute per user.
&gt; 
&gt; Thank you [@imskr](https://gitlab.com/imskr) for this community contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Resolve to-do items, one discussion at a time](https://docs.gitlab.com/ee/user/todos.html): &lt;code&gt;Notifications&lt;/code&gt;&lt;/summary&gt;

&gt; Discussions on GitLab issues can get busy. GitLab helps you manage these conversations by raising a to-do item for comments that are relevant to you, and automatically resolves the item when you take an action on the issue.
&gt; 
&gt; Previously, when you took action on a thread in the issue, all to-do items were resolved, even if you were mentioned in several different threads. Now, GitLab resolves only the to-do item for the thread you interacted with.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Indicate imported items in UI](https://docs.gitlab.com/ee/user/project/import/#supported-import-sources): &lt;code&gt;Importers&lt;/code&gt;&lt;/summary&gt;

&gt; You can import projects to GitLab from [other SCM solutions](https://docs.gitlab.com/ee/user/project/import/#supported-import-sources). However, it was difficult to know
&gt; if project items were imported or created on the GitLab instance.
&gt; 
&gt; With this release, we've added visual indicators to items imported from GitHub, Gitea, Bitbucket Server, and Bitbucket Cloud where the creator is identified as a specific
&gt; user. For example, merge requests, issues, and notes.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Deleted branches are removed from Jira development panel](https://docs.gitlab.com/ee/integration/jira/development_panel.html#feature-availability): &lt;code&gt;Integrations&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, when using [GitLab for Jira Cloud app](https://docs.gitlab.com/ee/integration/jira/connect-app.html), if you deleted a branch in GitLab, that branch still
&gt; appeared in Jira development panel. Selecting that branch caused a `404` error on GitLab.
&gt; 
&gt; From this release, branches deleted in GitLab are removed from the Jira development panel.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Find project settings by using the command palette](https://docs.gitlab.com/ee/user/search/command_palette.html): &lt;code&gt;Settings&lt;/code&gt;, &lt;code&gt;Global Search&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab offers many settings across projects, groups, the instance, and for yourself personally. To find the setting you're looking for, you often have to spend time clicking through many different areas of the UI.
&gt; 
&gt; With this release, you can now search for project settings from the command palette. Try it out by visiting a project, selecting **Search or go to...**, entering command mode with `&gt;`, and typing the name of a settings section, like **Protected tags**. Select a result to jump right to the setting itself.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Log streaming for Kubernetes pods and containers](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html): &lt;code&gt;Environment Management&lt;/code&gt;&lt;/summary&gt;

&gt; In GitLab 16.1, we introduced the Kubernetes pod list and detail views. However, you still had to use third-party tools for an in-depth analysis of your workloads.
&gt; GitLab now ships with a log streaming view for pods and containers, so you can quickly check and troubleshoot issues across your environments without leaving your application delivery tool.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/plan/"&gt;Plan&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Separate wiki page title and path fields](https://docs.gitlab.com/ee/user/project/wiki/): &lt;code&gt;Wiki&lt;/code&gt;&lt;/summary&gt;

&gt; In GitLab 17.2, wiki page titles are separate from their paths. In previous releases, if a page title changed, the path would also change, which could cause links to the page to break. Now, if a wiki page's title changes, the path remains unchanged. Even if a wiki page path changes, an automatic redirect is set up to prevent broken links.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Improvements to the wiki sidebar](https://docs.gitlab.com/ee/user/project/wiki/): &lt;code&gt;Wiki&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab 17.2 adds several enhancements to how wikis display the sidebar. Now, a wiki displays all pages in the sidebar (up to 5000 pages), displays a table of contents (TOC), and provides a search bar to quickly find pages.
&gt; 
&gt; Previously, the sidebar lacked a TOC, making it challenging to navigate to sections of a page. The new TOC feature helps to see the page structure clearly, as well as navigate quickly to different sections, greatly improving usability.
&gt; 
&gt; The addition of a search bar makes discovering content easier. And because the sidebar now displays all pages, you can seamlessly browse an entire wiki.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Add type attribute to issues events webhook](https://docs.gitlab.com/ee/user/project/integrations/webhook_events.html#issue-events): &lt;code&gt;Team Planning&lt;/code&gt;, &lt;code&gt;Webhooks&lt;/code&gt;, &lt;code&gt;Incident Management&lt;/code&gt;, &lt;code&gt;Service Desk&lt;/code&gt;&lt;/summary&gt;

&gt; Issues, tasks, incidents, requirements, objectives, and key results
&gt; all trigger payloads under the **Issues Events** webhook category. Until now, there has been no way to quickly determine the type of object that triggered the webhook within the event payload. This release introduces an `object_attributes.type` attribute available on payloads within the **Issues events**, **Comments**, **Confidential issues events**, and **Emoji events** triggers. 

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/create/"&gt;Create&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Pure SSH transfer protocol for LFS](https://docs.gitlab.com/ee/administration/lfs/#pure-ssh-transfer-protocol): &lt;code&gt;Source Code Management&lt;/code&gt;&lt;/summary&gt;

&gt; Back in September 2021, [`git-lfs` 3.0.0](https://github.com/git-lfs/git-lfs/blob/main/CHANGELOG.md#300-24-sep-2021)
&gt; released support for using SSH as the transfer protocol instead of HTTP.
&gt; Prior to `git-lfs` 3.0.0, HTTP was the only supported transfer protocol
&gt; which meant using `git-lfs` at GitLab was not possible for some users.
&gt; With this release, we're very excited to offer the ability to
&gt; enable support for SSH over HTTP as the transfer protocol for `git-lfs`.
&gt; 
&gt; Thank you to [Kyle Edwards](https://gitlab.com/KyleFromKitware) and
&gt; [Joe Snyder](https://gitlab.com/joe-snyder) for this contribution!

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/verify/"&gt;Verify&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Sort options for pipeline schedules](https://docs.gitlab.com/ee/ci/pipelines/schedules.html): &lt;code&gt;Continuous Integration (CI)&lt;/code&gt;&lt;/summary&gt;

&gt; You can now sort the pipeline schedules list by description, ref, next run, created date, and updated date.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[GitLab Runner 17.2](https://docs.gitlab.com/runner): &lt;code&gt;GitLab Runner Core&lt;/code&gt;&lt;/summary&gt;

&gt; We're releasing GitLab Runner 17.2 today! GitLab Runner is the lightweight, highly scalable agent that runs your CI/CD jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.
&gt; 
&gt; #### What's new:
&gt; 
&gt; - [GitLab Runner fleeting plugin for AWS EC2 instances (GA)](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/29222)
&gt; - [Permit configuration of Runner `livenessProbe` and `readinessProbe`](https://gitlab.com/gitlab-org/charts/gitlab-runner/-/issues/545)
&gt; - [Ability to enable and disable the `umask 0000` command for the Kubernetes executor](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/28867)
&gt; - [Support for Red Hat OpenShift 4.16 for the GitLab Runner Operator](https://gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/-/issues/203)
&gt; 
&gt; #### Bug Fixes:
&gt; 
&gt; - [Gitlab Runner upgrade removes all cache volumes](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/30876)
&gt; 
&gt; For a list of all changes, see the GitLab Runner [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-runner/blob/17-2-stable/CHANGELOG.md).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/package/"&gt;Package&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Document modules in the Terraform module registry](https://docs.gitlab.com/ee/user/packages/terraform_module_registry/index.html#view-terraform-modules): &lt;code&gt;Package Registry&lt;/code&gt;&lt;/summary&gt;

&gt; The Terraform module registry now displays Readme files! With this highly requested feature, you can transparently document the purpose, configuration, and requirements of each module.
&gt; 
&gt; Previously, you had to search other sources for this critical information, which made it difficult to properly evaluate and use modules. Now, with the module documentation readily available, you can quickly understand a module's capabilities before you use it. This accessibility empowers you to confidently share and reuse Terraform code across your organization.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/govern/"&gt;Govern&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[OAuth 2.0 device authorization grant support](https://docs.gitlab.com/ee/api/oauth2.html#device-authorization-grant-flow): &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab now supports the [OAuth 2.0 device authorization grant flow](https://datatracker.ietf.org/doc/html/rfc8628). This flow makes it possible to securely authenticate your GitLab identity from input constrained devices where browser interactions are not an option.
&gt; This makes the device authorization grant flow ideal for users attempting to use GitLab services from headless servers or other devices with no, or limited, UI.
&gt; Thank you [John Parent](https://kitware.com/) for your contribution! 

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Identify dates when multiple access tokens expire](https://docs.gitlab.com/ee/security/token_overview.html#identify-dates-when-many-tokens-expire) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; Administrators can now run a script that identifies dates when multiple access tokens expire. You can use this script in combination with other scripts on the [token troubleshooting page](https://docs.gitlab.com/ee/security/token_overview.html#troubleshooting) to identify and extend large batches of tokens that might be approaching their expiration date, if token rotation has not yet been implemented.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[OAuth authorization screen improvements](https://docs.gitlab.com/ee/integration/oauth_provider.html): &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; The OAuth authorization screen now more clearly describes the authorization you are granting. It also includes a "verified by GitLab" section for applications that are provided by GitLab. Previously, the user experience was the same, regardless of whether an application was provided by GitLab or not. This new functionality provides an extra layer of trust.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Streamlined instance administrator setup](https://docs.gitlab.com/ee/administration/) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;User Management&lt;/code&gt;&lt;/summary&gt;

&gt; The administrator setup experience for a new install of GitLab has been streamlined and made more secure. The initial administrator root email address is now randomzied, and administrators are forced to change this email address to an account that they can access. Previously, this step could have been delayed, and an administrator might forget to change the email address.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[User API added to the Snowflake Data Connector](https://docs.gitlab.com/ee/integration/snowflake.html) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Audit Events&lt;/code&gt;, &lt;code&gt;Compliance Management&lt;/code&gt;&lt;/summary&gt;

&gt; In GitLab 17.2, we've added support for the [Users API](https://docs.gitlab.com/ee/api/users.html#list-users) to the [GitLab Data Connector](https://app.snowflake.com/marketplace/listing/GZTYZXESENG/gitlab-gitlab-data-connector),
&gt; which is available in the Snowflake Marketplace app. You can now stream user data from self-managed GitLab instances to Snowflake using the Users API.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[`rules:changes:compare_to` now supports CI/CD variables](https://docs.gitlab.com/ee/ci/yaml/#ruleschangescompare_to): &lt;code&gt;Pipeline Composition&lt;/code&gt;, &lt;code&gt;Variables&lt;/code&gt;&lt;/summary&gt;

&gt; In GitLab 15.3 we introduced the [`compare_to` keyword](https://docs.gitlab.com/ee/ci/yaml/#ruleschangescompare_to) for `rules:change`. This made it possible to define the exact ref to compare against. Beginning in GitLab 17.2, you can now use CI/CD variables with this keyword, making it easier to define and reuse `compare_to` values in multiple jobs.

&lt;/details&gt;</content>
    <link href="https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.2.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.3.0</id>
    <title>New release for GitLab: GitLab 17.3</title>
    <updated>2024-08-15T00:00:00+00:00</updated>
    <author>
      <name>gitlab-org/gitlab-foss</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="21 new features" src="https://img.shields.io/static/v1?color=108548&amp;amp;label=new+features&amp;amp;labelColor=525252&amp;amp;message=21&amp;amp;style=for-the-badge" title="New features added in this release" /&gt;
&lt;img alt="2254 total badges" src="https://img.shields.io/static/v1?color=1F75CB&amp;amp;label=total+features&amp;amp;labelColor=525252&amp;amp;message=2254&amp;amp;style=for-the-badge" title="Total features" /&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;[Omnibus improvements](https://docs.gitlab.com/omnibus/) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Omnibus Package&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab 17.3 includes packages for supporting [Raspberry Pi OS 12](https://www.raspberrypi.com/news/bookworm-the-new-version-of-raspberry-pi-os/).
&gt; 
&gt; Debian 10 has reached [EOL on June 30th, 2024](https://www.debian.org/releases/buster/). GitLab will remove support for Debian 10 in GitLab 17.6.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Improved sorting and filtering for projects and groups in Your Work](https://docs.gitlab.com/ee/user/project/working_with_projects.html#search-in-projects): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; We have updated the sorting and filtering functionality of the project and group overview in **Your Work**.
&gt; Previously, in the **Your Work** page for projects, you could filter by name and language, and use a pre-defined set of sorting options. We have standardized the sorting options to include **Name**, **Created date**, **Updated date**, and **Stars**. We also added a navigation element to sort in ascending or descending order, and moved the language filter to the filter menu. Now you can find archived projects in the new **Inactive** tab. Additionally, we added a **Role** filter that allows you to search for projects you are the Owner of.
&gt; 
&gt; In the Your Work page for groups, we have standardized the sorting options to include **Name**, **Created date**, and **Updated date**, and added a navigation element to sort in ascending or descending order.
&gt; 
&gt; We welcome feedback about these changes in [#438322](https://gitlab.com/gitlab-org/gitlab/-/issues/438322).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Kubernetes 1.30 support](https://docs.gitlab.com/ee/user/clusters/agent/#supported-kubernetes-versions-for-gitlab-features)&lt;/summary&gt;

&gt; This release adds full support for Kubernetes version 1.30, released in April 2024. If you deploy your apps to Kubernetes, you can now upgrade your connected clusters to the most recent version and take advantage of all its features.
&gt; 
&gt; You can read more about [our Kubernetes support policy and other supported Kubernetes versions](https://docs.gitlab.com/ee/user/clusters/agent/#supported-kubernetes-versions-for-gitlab-features).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Toggle inheriting settings for integrations by using the API](https://docs.gitlab.com/ee/api/integrations.html): &lt;code&gt;Integrations&lt;/code&gt;&lt;/summary&gt;

&gt; Until now, you could only control whether a project inherited integration settings, or used its
&gt; own settings, using the UI.
&gt; 
&gt; In this milestone, we are introducing a new `use_inherited_settings` parameter to the REST API of all integrations. This parameter allows you to use the API to set
&gt; whether or not a project inherits integration settings. If not set, the default behavior is `false` (use the project's own settings).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Find group settings by using the command palette](https://docs.gitlab.com/ee/user/search/command_palette.html): &lt;code&gt;Settings&lt;/code&gt;, &lt;code&gt;Global Search&lt;/code&gt;&lt;/summary&gt;

&gt; In 17.2, we added the ability to [search for project settings by using the command palette](https://about.gitlab.com/releases/2024/07/18/gitlab-17-2-released/#find-project-settings-by-using-the-command-palette). This change made it easier to quickly find the settings you need.
&gt; 
&gt; With 17.3, you can now search for group settings from the command palette as well. Try it out by visiting a group, selecting **Search or go to**, entering command mode with `&gt;`, and typing the name of a settings section, like **Merge request approvals**. Select a result to jump right to the setting itself.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Delete a pod from the GitLab UI](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html#delete-a-pod): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; Have you ever needed to restart or delete a failing pod in Kubernetes? Until now, you had to leave GitLab, use another tool to connect to the cluster, stop the pod, and wait for a new pod to start. GitLab now has built-in support for deleting pods, so you can smoothly troubleshoot your Kubernetes clusters.
&gt; 
&gt; You can stop a pod from a [dashboard for Kubernetes](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html), which lists all the pods across your cluster or namespace.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Easily connect to a cluster from your local terminal](https://docs.gitlab.com/ee/user/clusters/agent/user_access.html): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; Do you want to connect to a Kubernetes cluster from your local terminal or using one of the desktop Kubernetes GUI tools?
&gt; GitLab allows you to connect to a terminal using the [user access feature of the agent for Kubernetes](https://docs.gitlab.com/ee/user/clusters/agent/user_access.html). 
&gt; Previously, finding commands required navigating out of GitLab to browse the documentation. Now, GitLab provides the connect command from the UI. GitLab can even help you configure user access!
&gt; 
&gt; To retrieve the connection command, either go to a [Kubernetes dashboard](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html), or to the [agent list](https://docs.gitlab.com/ee/user/clusters/agent/work_with_agent.html#view-your-agents).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/plan/"&gt;Plan&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Add merge requests to tasks](https://docs.gitlab.com/ee/user/tasks.html#add-a-merge-request-and-automatically-close-tasks): &lt;code&gt;Team Planning&lt;/code&gt;&lt;/summary&gt;

&gt; Tasks are frequently used to break down issues into engineering implementation steps. Before this release, there was no way to connect a merge request to a task it implements. You can now use the same [closing pattern](https://docs.gitlab.com/ee/user/project/issues/managing_issues.html#closing-issues-automatically) that you would when referencing issues from a merge request description to connect a merge request to a task. From the task view, connected merge requests are visible from the sidebar. If your project has the [auto-close setting enabled](https://docs.gitlab.com/ee/user/project/issues/managing_issues.html#disable-automatic-issue-closing), the task will automatically close when the connected merge request is merged into your default branch.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Set parent items for OKRs and tasks](https://docs.gitlab.com/ee/user/okrs.html#set-an-objective-as-a-parent): &lt;code&gt;Portfolio Management&lt;/code&gt;&lt;/summary&gt;

&gt; You can now effortlessly update parent assignments for [OKRs](https://docs.gitlab.com/ee/user/okrs.html#set-an-objective-as-a-parent) and [tasks](https://docs.gitlab.com/ee/user/tasks.html#set-an-issue-as-a-parent), directly from the child record, eliminating the need to navigate back and forth. This is a great step towards our goal of [improving efficiency with your workflows](https://gitlab.com/groups/gitlab-org/-/epics/10501).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Report abuse for task, objective and key result items](https://docs.gitlab.com/ee/user/report_abuse.html): &lt;code&gt;Team Planning&lt;/code&gt;&lt;/summary&gt;

&gt; You can now easily report abuse for work items directly from the **Actions** menu, just like you can with legacy issues. This new feature helps keep your workspace clean and safe by allowing you to quickly flag inappropriate content, ensuring a better collaborative environment for your team.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Resolve threads in tasks, objectives, and key results](https://docs.gitlab.com/ee/user/discussions/#resolve-a-thread): &lt;code&gt;Team Planning&lt;/code&gt;&lt;/summary&gt;

&gt; You can now resolve threads in tasks, objectives, and key results, making it easier to manage and track important conversations. Resolved threads are collapsed by default, helping you focus on active discussions and streamline your collaboration workflows.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/create/"&gt;Create&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Improved TLS support in JetBrains IDEs](https://docs.gitlab.com/ee/editor_extensions/jetbrains_ide/#add-a-custom-certificate-for-code-suggestions): &lt;code&gt;Editor Extensions&lt;/code&gt;&lt;/summary&gt;

&gt; For tighter security in sensitive environments, you can now configure custom HTTP agent options, including client certificates and certificate authorities, directly in your JetBrains IDE settings.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[More easily remove content from repositories](https://docs.gitlab.com/ee/user/project/repository/reducing_the_repo_size_using_git.html#remove-blobs): &lt;code&gt;Source Code Management&lt;/code&gt;&lt;/summary&gt;

&gt; Currently, the process for removing content from a repository is complicated, and you might have to force push the project to GitLab.
&gt; This is prone to errors and can cause you to temporarily turn off protections to enable the push.
&gt; It can be even harder to delete files that use too much space within the repository.
&gt; 
&gt; You can now use the new repository maintenance option in project settings to remove blobs based on a list of object IDs.
&gt; With this new method, you can selectively remove content without the need to force push a project back to GitLab.
&gt; 
&gt; In the event that secrets or other content has been pushed that needs to be redacted from a project, we're also introducing a new option to redact text.
&gt; Provide a string that GitLab will replace with `***REMOVED***` in files across the project.
&gt; After the text has been redacted, run housekeeping to remove old versions of the string.
&gt; 
&gt; This new UI streamlines the way you can manage your repositories when content needs to be removed.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/verify/"&gt;Verify&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Filter jobs by job name](https://docs.gitlab.com/ee/ci/jobs/): &lt;code&gt;Continuous Integration (CI)&lt;/code&gt;&lt;/summary&gt;

&gt; You can now quickly find a specific job by searching for a job name.
&gt; 
&gt; Previously, you could only filter the list of jobs by status, requiring manual scrolling to find a specific job. With this release, you can now enter a job name to filter the results. The results will only include jobs in pipelines that ran after the release of GitLab 17.3.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[GitLab Runner 17.3](https://docs.gitlab.com/runner): &lt;code&gt;GitLab Runner Core&lt;/code&gt;&lt;/summary&gt;

&gt; We're releasing GitLab Runner 17.3 today! GitLab Runner is the lightweight, highly scalable agent that runs your CI/CD jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.
&gt; 
&gt; #### Bug fixes:
&gt; 
&gt; - [Jobs appear to hang when canceled in the Kubernetes runner](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/37780)
&gt; - [Log level not updated when not specified](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/37490)
&gt; - [Job log adds extra newlines when using the runner Kubernetes executor](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27099) 
&gt; 
&gt; For a list of all changes, see the GitLab Runner [changelog](https://gitlab.com/gitlab-org/gitlab-runner/blob/17-3-stable/CHANGELOG.md).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Description and type added to CI/CD catalog component input details](https://docs.gitlab.com/ee/ci/components/#cicd-catalog): &lt;code&gt;Pipeline Composition&lt;/code&gt;&lt;/summary&gt;

&gt; The details page for a CI/CD component in the catalog provides useful information about the component. In this release we've added two more columns to the table that shows information about available inputs. The new **Description** and **Type** columns make it much easier to understand what an input is used for, and what type of value is expected.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/govern/"&gt;Govern&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Filter the member list in a group or project by role](https://docs.gitlab.com/ee/user/project/members/index.html): &lt;code&gt;Permissions&lt;/code&gt;&lt;/summary&gt;

&gt; Users can now filter the Members page by role. Use the filter to find members with a specific role.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[View role details in the right drawer](https://docs.gitlab.com/ee/user/custom_roles.html): &lt;code&gt;Permissions&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, if you wanted to view permissions for the custom roles of a user, you had to have the Owner role in the group. This requirement made it difficult to troubleshoot and understand what actions a user can perform when assigned a custom role. Now, any user can view the permissions of a user assigned a custom role in the Members page.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Disable personal access tokens using Admin UI](https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#use-the-admin-ui) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; Administrators can now disable or re-enable instance personal access tokens through the Admin UI. Previously, administrators had to use the application settings API or the GitLab Rails console to do this.  

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Bluesky identifier in user profile](https://docs.gitlab.com/ee/user/profile/#add-external-accounts-to-your-user-profile-page): &lt;code&gt;User Profile&lt;/code&gt;&lt;/summary&gt;

&gt; You can now add your Bluesky did:plc identifier to your GitLab profile.
&gt; 
&gt; Thank you [Dominique](https://domi.zip/) for your contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Subdomain cookies preserved on sign out](https://docs.gitlab.com/ee/user/profile/active_sessions.html): &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab's sign out process has been improved so that cookies from sibling subdomains are not deleted on sign out. Previously, these cookies were deleted, causing users to be signed out of other subdomain services on the same top-level domain as GitLab. For example, if a user has Kibana set up on `kibana.example.com` and GitLab set up on `gitlab.example.com`, signing out from GitLab will no longer sign the user out from Kibana.
&gt; 
&gt; Thank you [Guilherme C. Souza](https://gitlab.com/GCSBOSS) for your contribution! 

&lt;/details&gt;</content>
    <link href="https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.3.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.4.0</id>
    <title>New release for GitLab: GitLab 17.4</title>
    <updated>2024-09-19T00:00:00+00:00</updated>
    <author>
      <name>gitlab-org/gitlab-foss</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="17 new features" src="https://img.shields.io/static/v1?color=108548&amp;amp;label=new+features&amp;amp;labelColor=525252&amp;amp;message=17&amp;amp;style=for-the-badge" title="New features added in this release" /&gt;
&lt;img alt="2271 total badges" src="https://img.shields.io/static/v1?color=1F75CB&amp;amp;label=total+features&amp;amp;labelColor=525252&amp;amp;message=2271&amp;amp;style=for-the-badge" title="Total features" /&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;[Omnibus improvements](https://docs.gitlab.com/omnibus/) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Omnibus Package&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab 17.4 includes PostgreSQL 16 by default for fresh installations of GitLab.
&gt; 
&gt; GitLab 17.5 will include OpenSSL V3. This will affect Omnibus instances with external integration setup's that do not meet the minimum requirements of TLS 1.2 or above for outbound connections, along with at least 112-bit encryption for TLS certificates. Please review our [OpenSSL upgrade documentation](https://docs.gitlab.com/omnibus/settings/ssl/openssl_3.html) for more information or if your are unsure if your instance will be affected.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[List groups invited to a group or project using the Groups or Projects API](https://docs.gitlab.com/ee/api/groups.html#list-a-groups-invited-groups): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; We added new endpoints to the Groups API and Projects API to retrieve the groups that have been invited to a group or project. This functionality is available only on the Members page of a group or project. We hope that this addition will make it easier to automate membership management for your groups and projects. The endpoints are rate-limited to 60 requests per minute per user.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Improved source display for group and project members](https://docs.gitlab.com/ee/user/project/members/#membership-types): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; We have simplified the display of the source column on the Members page for groups and projects. Direct members are still indicated as `Direct member`. Inherited members are now listed as `Inherited from` followed by the group name. Members that were added by inviting a group to the group or project are listed as `Invited group` followed by the group name. For members that inherited from an invited group that was added to a parent group, we now display the last step to keep the display actionable for users managing membership.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Trigger a Flux reconciliation from the cluster UI](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; Although you can configure Flux to trigger reconciliations at specified intervals, there are situations where you might want an immediate reconciliation. In past releases, you could trigger the reconciliation from a CI/CD pipeline or from the command line. In GitLab 17.4, you can now trigger a reconciliation from a dashboard for Kubernetes with no additional configuration.
&gt; 
&gt; To trigger a reconciliation, go to a configured dashboard and select the Flux status badge.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Resend failed webhook requests with the API](https://docs.gitlab.com/ee/api/projects.html#resend-project-hook-event): &lt;code&gt;Webhooks&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, GitLab provided the ability to resend webhook requests only in the UI, which was inefficient if many
&gt; requests failed.
&gt; 
&gt; So that you can handle failed webhook requests programmatically, in this release thanks to a community contribution, we
&gt; added API endpoints for resending them:
&gt; 
&gt; - [Project webhook requests](https://docs.gitlab.com/ee/api/projects.html#resend-project-hook-event)
&gt; - [Group webhook requests](https://docs.gitlab.com/ee/api/groups.html#resend-group-hook-event) (Premium and Ultimate tier only)
&gt; 
&gt; You can now:
&gt; 
&gt; 1. Get a list of [project hook](https://docs.gitlab.com/ee/api/projects.html#get-project-hook-events) or [group hook](https://docs.gitlab.com/ee/api/groups.html#get-group-hook-events) events.
&gt; 1. Filter the list to see failures.
&gt; 1. Use the `id` of any event to resend it.
&gt; 
&gt; Thanks to [Phawin](https://gitlab.com/lifez) for [this community contribution](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/151130)!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Idempotency keys for webhook requests](https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#delivery-headers): &lt;code&gt;Webhooks&lt;/code&gt;&lt;/summary&gt;

&gt; From this release, we support an idempotency key in the headers of webhook requests. An idempotency key is a unique ID that remains consistent across webhook retries, which
&gt; allows webhook clients to detect retries. Use the `Idempotency-Key` header to ensure the idempotency of webhook effects on integrations.
&gt; 
&gt; Thanks to [Van](https://gitlab.com/van.m.anderson) for this [community contribution](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/160952)!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[List Kubernetes resource events](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab provides a real-time view into your pods and streaming pod logs. Until now, however, we didn't show you resource-specific event information from the UI,
&gt; so you still had to use 3rd party tools to debug Kubernetes deployments.
&gt; This release adds events to the resource details view of [the dashboard for Kubernetes](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html).
&gt; 
&gt; This is the first time we've added events to the UI. Currently, events are refreshed every time you open the resource details view. You can track the development of real-time event streaming in [issue 470042](https://gitlab.com/gitlab-org/gitlab/-/issues/470042).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/plan/"&gt;Plan&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Resizable wiki sidebar](https://docs.gitlab.com/ee/user/project/wiki/): &lt;code&gt;Wiki&lt;/code&gt;&lt;/summary&gt;

&gt; You can now adjust the wiki sidebar to see longer page titles, improving the overall discoverability of 
&gt; content. As wiki content grows, having a resizable sidebar helps manage and browse through complex hierarchies or extensive 
&gt; lists of pages more efficiently.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[GitLab Pages without wildcard DNS is generally available](https://docs.gitlab.com/ee/administration/pages/#pages-domain-without-wildcard-dns) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Pages&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, to create a GitLab Pages project, you needed a domain formatted like `name.example.io`
&gt; or `name.pages.example.io`. This requirement meant you had to set up wildcard DNS records and
&gt; TLS certificate. In this release, setting up a GitLab Pages project without a DNS wildcard has
&gt; moved from beta to generally available.
&gt; 
&gt; Removing the requirement for wildcard certificates eases administrative overhead associated with
&gt; GitLab Pages. Some customers can't use GitLab Pages because of organizational restrictions on
&gt; wildcard DNS records or certificates.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/create/"&gt;Create&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[CI/CD component for code intelligence](https://docs.gitlab.com/ee/user/project/code_intelligence.html#with-the-cicd-component): &lt;code&gt;Code Review Workflow&lt;/code&gt;&lt;/summary&gt;

&gt; Code intelligence in GitLab provides code navigation features when browsing a repository. Getting started with code navigation is often complicated, as you must configure a CI/CD job. This job can require custom scripting to provide the correct output and artifacts.
&gt; 
&gt; GitLab now supports an official [Code intelligence CI/CD component](https://gitlab.com/explore/catalog/components/code-intelligence) for easier setup. Add this component to your project by following the instructions for [using a component](https://docs.gitlab.com/ee/ci/components/index.html#use-a-component). This greatly simplifies adopting code intelligence in GitLab.
&gt; 
&gt; Currently, the component supports these languages:
&gt; 
&gt;   - Go version 1.21 or later.
&gt;   - TypeScript or JavaScript.
&gt; 
&gt; We'll continue to evaluate [available SCIP indexers](https://github.com/sourcegraph/scip?tab=readme-ov-file#tools-using-scip) as we look to broaden language support for the new component. If you're interested in adding support for a language, please open a merge request in the [code intelligence component](https://gitlab.com/components/code-intelligence) project.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Linked files in merge request show first](https://docs.gitlab.com/ee/user/project/merge_requests/changes.html#show-a-linked-file-first): &lt;code&gt;Code Review Workflow&lt;/code&gt;&lt;/summary&gt;

&gt; When you share a link to a specific file in a merge request, it's often because you want the person to look at something within that file. Merge requests previously needed to load all of the files before scrolling to the specific position you've referenced. Linking directly to a file is a great way to improve the speed of collaboration in merge requests:
&gt; 
&gt; 1. Find the file you want to show first. Right-click the name of the file to copy the link to it.
&gt; 1. When you visit that link, your chosen file is shown at the top of the list. The file browser shows a link icon next to the file name.
&gt; 
&gt; Feedback about linked files can be left in [issue 439582](https://gitlab.com/gitlab-org/gitlab/-/issues/439582).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Auto-merge when all checks pass](https://docs.gitlab.com/ee/user/project/merge_requests/auto_merge.html): &lt;code&gt;Code Review Workflow&lt;/code&gt;&lt;/summary&gt;

&gt; Merge requests have many required checks that must pass before they are mergeable. These checks can include approvals, unresolved threads, pipelines, and other items that need to be satisfied. When you're responsible for merging code, it can be hard to keep track of all of these events, and know when to come back and check to see if a merge request can be merged.
&gt; 
&gt; GitLab now supports **Auto-merge** for all checks in merge requests. Auto-merge enables any user who is eligible to merge to set a merge request to **Auto-merge**, even before all the required checks have passed. As the merge request continues through its lifecycle, the merge request automagically merges after the last failing check passes.
&gt; 
&gt; We're really excited about this improvement to accelerate your merge request workflows. You can leave feedback about this feature in [issue 438395](https://gitlab.com/gitlab-org/gitlab/-/issues/438395).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/verify/"&gt;Verify&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[JaCoCo support for test coverage visualization available in beta](https://docs.gitlab.com/ee/ci/testing/test_coverage_visualization/jacoco.html): &lt;code&gt;Code Testing and Coverage&lt;/code&gt;&lt;/summary&gt;

&gt; You can now use JaCoCo coverage reports, a popular standard for coverage calculation, inside your merge requests. The feature is available as beta, but ready for testing by anyone who wants to use JaCoCo coverage reports right away. If you have any feedback, feel free to contribute to the [feedback issue](https://gitlab.com/gitlab-org/gitlab/-/issues/479804).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[GitLab Runner 17.4](https://docs.gitlab.com/runner): &lt;code&gt;GitLab Runner Core&lt;/code&gt;&lt;/summary&gt;

&gt; We’re also releasing GitLab Runner 17.4 today! GitLab Runner is the highly-scalable build agent that runs your CI/CD jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.
&gt; 
&gt; #### What's new:
&gt; 
&gt; - [GitLab Runner fleeting plugin for Azure compute (GA)](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/29223)
&gt; 
&gt; #### Bug Fixes:
&gt; 
&gt; - [The entire `step_script` contents appear in the job log's `after_script` section when a Kubernetes executor job is cancelled before completion](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/37952)
&gt; 
&gt; The list of all changes is in the GitLab Runner [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-runner/blob/17-4-stable/CHANGELOG.md).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Hide CI/CD variable values in the UI](https://new.docs.gitlab.com/ci/variables/#define-a-cicd-variable-in-the-ui): &lt;code&gt;Variables&lt;/code&gt;&lt;/summary&gt;

&gt; You might not want anyone to see the value of a variable after it is saved to project settings. You can now select the new **Masked and hidden** visibility option when creating a CI/CD variable. Selecting this option will permanently mask the value of the variable in the CI/CD settings UI, restricting the value from being displayed to anyone in the future and decreasing visibility of your data.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/secure/"&gt;Secure&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Secret Detection support for Anthropic API keys](https://docs.gitlab.com/ee/user/application_security/secret_detection/pipeline/detected_secrets.html): &lt;code&gt;Secret Detection&lt;/code&gt;&lt;/summary&gt;

&gt; Both pipeline and client-side Secret Detection now support detection of [Anthropic](https://www.anthropic.com/) API keys.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/govern/"&gt;Govern&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Optional token expiration](https://docs.gitlab.com/ee/administration/settings/account_and_limit_settings.html#require-expiration-dates-for-new-access-tokens) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; Administrators can now decide if they want to enforce a mandatory expiration date for personal, project, and group access tokens. If administrators disable this setting, any new access token generated will not be required to have an expiration date. By default this setting is enabled, and an expiration less than that of the maximum allowed lifetime is required. This setting is available in GitLab 16.11 and later.

&lt;/details&gt;</content>
    <link href="https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.4.0" rel="alternate"/>
  </entry>
</feed>
