<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Meilisearch Releases</title>
  <updated>2024-11-05T23:33:04.083060-05:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.9.1</id>
    <title>New release for Meilisearch: v1.9.1 ü¶é</title>
    <updated>2024-08-27T16:39:40-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;Fixes ü™≤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Return an empty list of embeddings for embedders that have no document for an embedder. by @dureuill in https://github.com/meilisearch/meilisearch/pull/4889&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This fixes an issue where dumps created for indexes with:
1. A user-provided embedder
2. At least one documents that opt-out of vectors for that user-provided embedder&lt;/p&gt;
&lt;p&gt;would fail to import correctly.&lt;/p&gt;
&lt;h2&gt;Upgrade path to v1.10.0 üöÄ&lt;/h2&gt;
&lt;p&gt;If you are a Cloud user affected by the above issue, please contact customer support so we perform the upgrade for you.&lt;/p&gt;
&lt;p&gt;If you are an OSS user affected by the above, perform the following operations:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Upgrade from v1.9.0 to v1.9.1 without using a dump&lt;/li&gt;
&lt;li&gt;Upgrade to v1.10.0 using a dump created from v1.9.1&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://github.com/meilisearch/meilisearch/compare/v1.9.0...v1.9.1"&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.9.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.10.1</id>
    <title>New release for Meilisearch: v1.10.1 ü¶©</title>
    <updated>2024-09-02T05:59:14-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;Fixes ü¶ã&lt;/h2&gt;
&lt;h3&gt;Better search handling under heavy loads&lt;/h3&gt;
&lt;p&gt;All of the next PR should make meilisearch behave better under heavy loads:
* Only spawn one search queue in actix-web by @irevoire in https://github.com/meilisearch/meilisearch/pull/4893
* Make sure the index scheduler never stops running by @irevoire in https://github.com/meilisearch/meilisearch/pull/4896
* Explicitly drop the search permits by @irevoire in https://github.com/meilisearch/meilisearch/pull/4898
* Stop trying to process searches after one minute by @irevoire in https://github.com/meilisearch/meilisearch/pull/4899&lt;/p&gt;
&lt;h2&gt;Speed improvement üêé&lt;/h2&gt;
&lt;p&gt;We made the autobatching of the document deletion with the document deletion by filter possible which should uncklog the task queue of the people using these two operations heavily.
Meilisearch still cannot autobatch the document deletion by filter and the document addition, though.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Autobatch document deletion by filter by @irevoire in https://github.com/meilisearch/meilisearch/pull/4901&lt;/li&gt;
&lt;li&gt;Do not fail the whole batch when a single document deletion by filter fails by @irevoire in https://github.com/meilisearch/meilisearch/pull/4905&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/meilisearch/meilisearch/compare/v1.10.0...v1.10.1&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.10.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.10.2</id>
    <title>New release for Meilisearch: v1.10.2 ü¶©</title>
    <updated>2024-09-24T02:49:39-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;Fixes ü¶ã&lt;/h2&gt;
&lt;h3&gt;Activate the Swedish tokenization Pipeline&lt;/h3&gt;
&lt;p&gt;The Swedish tokenization pipeline were deactivated in the previous versions, now it is activated when specifying the index Language in the settings:&lt;/p&gt;
&lt;h4&gt;PATCH &lt;code&gt;/indexes/:index-name/settings&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{
  "localizedAttributes": [ { "locales": ["swe"], "attributePatterns": ["*"] } ]
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;related PR: #4949&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.10.2" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.10.3</id>
    <title>New release for Meilisearch: v1.10.3 ü¶©</title>
    <updated>2024-10-10T10:59:29-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;Search improvements&lt;/h2&gt;
&lt;p&gt;This PR lets you configure two behaviors of the engine through experimental cli flags:
- The number of searches Meilisearch can process concurrently per core with the &lt;a href="https://github.com/orgs/meilisearch/discussions/784"&gt;&lt;code&gt;--experimental-nb-searches-per-core&lt;/code&gt;&lt;/a&gt; cli flag
- After how many seconds Meilisearch can consider a search as irrelevant and drop it straight away without processing it with the &lt;a href="https://github.com/orgs/meilisearch/discussions/783"&gt;&lt;code&gt;--experimental-drop-search-after&lt;/code&gt;&lt;/a&gt; cli flag&lt;/p&gt;
&lt;p&gt;Done by @irevoire in https://github.com/meilisearch/meilisearch/pull/5000&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/meilisearch/meilisearch/compare/v1.10.2...v1.10.3&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.10.3" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.11.0</id>
    <title>New release for Meilisearch: v1.11.0 üêøÔ∏è</title>
    <updated>2024-10-28T04:36:44-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;p&gt;Meilisearch v1.11 introduces AI-powered search performance improvements thanks to binary quantization and various usage changes, all of which are steps towards a future stabilization of the feature. We have also improved federated search usage following user feedback.&lt;/p&gt;
&lt;p&gt;üß∞ All official Meilisearch integrations (including SDKs, clients, and other tools) are compatible with this Meilisearch release. Integration deployment happens between 4 to 48 hours after a new version becomes available.&lt;/p&gt;
&lt;p&gt;Some SDKs might not include all new features. Consult the project repository for detailed information. Is a feature you need missing from your chosen SDK? Create an issue letting us know you need it, or, for open-source karma points, open a PR implementing it (we'll love you for that ‚ù§Ô∏è).&lt;/p&gt;
&lt;h1&gt;New features and updates üî•&lt;/h1&gt;
&lt;h2&gt;Experimental - AI-powered search improvements&lt;/h2&gt;
&lt;p&gt;This release is Meilisearch's first step towards stabilizing AI-powered search and introduces a few breaking changes to its API. &lt;a href="https://www.notion.so/meilisearch/v1-11-AI-search-changes-0e37727193884a70999f254fa953ce6e"&gt;Consult the PRD for full usage details.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Done by @dureuill in #4906, #4920, #4892, and #4938.&lt;/p&gt;
&lt;h3&gt;‚ö†Ô∏è Breaking changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;When performing AI-powered searches, &lt;code&gt;hybrid.embedder&lt;/code&gt; is now a &lt;strong&gt;mandatory&lt;/strong&gt; parameter in &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; &lt;code&gt;/indexes/{:indexUid}/search&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;As a consequence, it is now &lt;strong&gt;mandatory&lt;/strong&gt; to pass &lt;code&gt;hybrid&lt;/code&gt; even for pure semantic searches&lt;/li&gt;
&lt;li&gt;&lt;code&gt;embedder&lt;/code&gt; is now a &lt;strong&gt;mandatory&lt;/strong&gt; parameter in &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; &lt;code&gt;/indexes/{:indexUid}/similar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Meilisearch now ignores &lt;code&gt;semanticRatio&lt;/code&gt; and performs a pure semantic search for queries that include &lt;code&gt;vector&lt;/code&gt; but not &lt;code&gt;q&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Addition &amp;amp; improvements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The default model for OpenAI is now &lt;code&gt;text-embedding-3-small&lt;/code&gt; instead of &lt;code&gt;text-embedding-ada-002&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;This release introduces a new embedder option: &lt;code&gt;documentTemplateMaxBytes&lt;/code&gt;. Meilisearch will truncate a document's template text when it goes over the specified limit&lt;/li&gt;
&lt;li&gt;Fields in &lt;code&gt;documentTemplate&lt;/code&gt; include a new &lt;code&gt;field.is_searchable&lt;/code&gt; property. The default document template now filters out both empty fields and fields not in the searchable attributes list:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v1.11:
&lt;code&gt;{% for field in fields %}
  {% if field.is_searchable and not field.value == nil %}
    {{ field.name }}: {{ field.value }}\n
  {% endif %}
{% endfor %}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;v1.10:
&lt;code&gt;{% for field in fields %}
  {{ field.name }}: {{ field.value }}\n
{% endfor %}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Embedders using the v1.10 document template will continue working as before. The new default document template will only work with newly created embedders.&lt;/p&gt;
&lt;h2&gt;Vector database indexing performance improvements&lt;/h2&gt;
&lt;p&gt;v1.11 introduces a new embedder option, &lt;code&gt;binaryQuantized&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
  -X PATCH 'http://localhost:7700/indexes/movies/settings' \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "embedders": {
      "image2text": {
        "binaryQuantized": true
      }
    }
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable binary quantization to convert embeddings of floating point numbers into embeddings of boolean values. This will negatively impact the relevancy of AI-powered searches but significantly improve performance in large collections with more than 100 dimensions.&lt;/p&gt;
&lt;p&gt;In our benchmarks, this reduced the size of the database by a factor of 10 and divided the indexing time by a factor of 6 with little impact on search times.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!WARNING]
Enabling this feature will update all of your vectors to contain only &lt;code&gt;1&lt;/code&gt;s or &lt;code&gt;-1&lt;/code&gt;s, significantly impacting relevancy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You cannot revert this option once you enable it&lt;/strong&gt;. Before setting &lt;code&gt;binaryQuantized&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, Meilisearch recommends testing it in a smaller or duplicate index in a development environment.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Done by @irevoire in #4941.&lt;/p&gt;
&lt;h2&gt;Federated search improvements&lt;/h2&gt;
&lt;h3&gt;Facet distribution and stats for federated searches&lt;/h3&gt;
&lt;p&gt;This release adds two new federated search options, &lt;code&gt;facetsByIndex&lt;/code&gt; and &lt;code&gt;mergeFacets&lt;/code&gt;. These allow you to request a federated search for facet distributions and stats data.&lt;/p&gt;
&lt;h4&gt;Facet information by index&lt;/h4&gt;
&lt;p&gt;To obtain facet distribution and stats for each separate index, use &lt;code&gt;facetsByIndex&lt;/code&gt; when querying the &lt;code&gt;POST&lt;/code&gt; &lt;code&gt;/multi-search&lt;/code&gt; endpoint:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json5
POST /multi-search
{
  "federation": {
    "limit": 20,
    "offset": 0,
    "facetsByIndex": {
      "movies": ["title", "id"],
      "comics": ["title"],
    }
  },
  "queries": [
    {
      "q": "Batman",
      "indexUid": "movies"
    },
    {
      "q": "Batman",
      "indexUid": "comics"
    }
  ]
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The multi-search response will include a new field, &lt;code&gt;facetsByIndex&lt;/code&gt; with facet data separated per index:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json5
{
  "hits": [‚Ä¶],
  ‚Ä¶
  "facetsByIndex": {
      "movies": {
        "distribution": {
          "title": {
            "Batman returns": 1
          },
          "id": {
            "42": 1
          }
        },
        "stats": {
          "id": {
            "min": 42,
            "max": 42
          }
        }
      },
     ‚Ä¶
  }
}&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Merged facet information&lt;/h4&gt;
&lt;p&gt;To obtain facet distribution and stats for all indexes merged into a single, use both &lt;code&gt;facetsByIndex&lt;/code&gt; and &lt;code&gt;mergeFacets&lt;/code&gt; when querying the &lt;code&gt;POST&lt;/code&gt; &lt;code&gt;/multi-search&lt;/code&gt; endpoint:&lt;/p&gt;
&lt;p&gt;```json5
POST /multi-search
{&lt;/p&gt;
&lt;p&gt;"federation": {
    "limit": 20,
    "offset": 0,
      "facetsByIndex": {
        "movies": ["title", "id"],
        "comics": ["title"],
      },
      "mergeFacets": {
        "maxValuesPerFacet": 10,
      }
  }
  "queries": [
    {
      "q": "Batman",
      "indexUid": "movies"
    },
    {
      "q": "Batman",
      "indexUid": "comics"
    }
  ]
}
```&lt;/p&gt;
&lt;p&gt;The response includes two new fields, &lt;code&gt;facetDistribution&lt;/code&gt; and &lt;code&gt;facetStarts&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json5
{
  "hits": [‚Ä¶],
  ‚Ä¶
  "facetDistribution": {
    "title": {
      "Batman returns": 1
      "Batman: the killing joke":
    },
    "id": {
      "42": 1
    }
  },
  "facetStats": {
    "id": {
      "min": 42,
      "max": 42
    }
  }
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Done by @dureuill in #4929.&lt;/p&gt;
&lt;h2&gt;Experimental ‚Äî New &lt;code&gt;STARTS WITH&lt;/code&gt; filter operator&lt;/h2&gt;
&lt;p&gt;Enable the experimental feature to use the &lt;code&gt;STARTS WITH&lt;/code&gt; filter operator:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
  -X PATCH 'http://localhost:7700/experimental-features/' \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "containsFilter": true
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;STARTS WITH&lt;/code&gt; operator when filtering:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json5
curl \
  -X POST http://localhost:7700/indexes/movies/search \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "filter": "hero STARTS WITH spider"
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;üó£Ô∏è This is an experimental feature, and we need your help to improve it! Share your thoughts and feedback on this &lt;a href="https://github.com/orgs/meilisearch/discussions/763"&gt;GitHub discussion&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Done by @Kerollmops in #4939.&lt;/p&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Language support and &lt;a href="https://www.meilisearch.com/docs/reference/api/settings#localized-attributes"&gt;localizedAttributes settings&lt;/a&gt; by @ManyTheFish in #4937&lt;/li&gt;
&lt;li&gt;Add ISO-639-1 variants&lt;/li&gt;
&lt;li&gt;Convert ISO-639-1 into ISO-639-3&lt;/li&gt;
&lt;li&gt;Add a German language tokenizer by @luflow in meilisearch/charabia#303 and in #4945&lt;/li&gt;
&lt;li&gt;Improve Turkish language support by @tkhshtsh0917 in meilisearch/charabia#305 and in  #4957&lt;/li&gt;
&lt;li&gt;Upgrade "batch failed" log to error level in #4955 by @dureuill.&lt;/li&gt;
&lt;li&gt;Update the search UI: remove the forced capitalized fields, by @curquiza in #4993&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Fixes üêû&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;‚ö†Ô∏è When using federated search, &lt;code&gt;query.facets&lt;/code&gt; was silently ignored at the query level, but should not have been. It now returns the appropriate error. Use &lt;code&gt;federation.facetsByIndex&lt;/code&gt; instead if you want facets to be applied during federated search.&lt;/li&gt;
&lt;li&gt;Prometheus &lt;code&gt;/metrics&lt;/code&gt; return the route pattern instead of the real route when returning the HTTP requests total by @irevoire in #4839&lt;/li&gt;
&lt;li&gt;Truncate values at the end of a list of facet values when the number of facet values is larger than &lt;code&gt;maxValuesPerFacet&lt;/code&gt;. For example, setting &lt;code&gt;maxValuesPerFacet&lt;/code&gt; to &lt;code&gt;2&lt;/code&gt; could result in &lt;code&gt;["blue", "red", "yellow"]&lt;/code&gt;, being truncated to &lt;code&gt;["blue", "yellow"]&lt;/code&gt; instead of ["blue", "red"]`. By @dureuill in #4929&lt;/li&gt;
&lt;li&gt;Improve the task cancellation when vectors are used, by @irevoire in #4971&lt;/li&gt;
&lt;li&gt;Swedish support: the characters &lt;code&gt;√•&lt;/code&gt;, &lt;code&gt;√§&lt;/code&gt;, &lt;code&gt;√∂&lt;/code&gt; are no longer normalized to &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;o&lt;/code&gt;. By @ManyTheFish in #4945&lt;/li&gt;
&lt;li&gt;Update rhai to fix an internal error when &lt;a href="https://github.com/orgs/meilisearch/discussions/762"&gt;updating documents with a function&lt;/a&gt; (experimental) by @irevoire in #4960&lt;/li&gt;
&lt;li&gt;Fix the bad experimental search queue size by @irevoire in #4992&lt;/li&gt;
&lt;li&gt;Do not send empty edit document by function by @irevoire in #5001&lt;/li&gt;
&lt;li&gt;Display vectors when no custom vectors were ever provided by @dureuill in #5008&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Misc&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Dependencies updates&lt;/li&gt;
&lt;li&gt;Security dependency upgrade: bump quinn-proto from 0.11.3 to 0.11.8 by @dependabot in #4911&lt;/li&gt;
&lt;li&gt;CIs and tests&lt;/li&gt;
&lt;li&gt;Make the tests run faster by @irevoire in #4808&lt;/li&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;li&gt;Fix broken links in README by @iornstein in #4943&lt;/li&gt;
&lt;li&gt;Misc&lt;/li&gt;
&lt;li&gt;Allow Meilitool to upgrade from v1.9 to v1.10 without a dump in some conditions, by @dureuill in #4912&lt;/li&gt;
&lt;li&gt;Fix bench by adding embedder by @dureuill in #4954&lt;/li&gt;
&lt;li&gt;Revamp analytics by @irevoire in #5011&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‚ù§Ô∏è Thanks again to our external contributors:
- &lt;a href="https://github.com/meilisearch/meilisearchg"&gt;Meilisearch&lt;/a&gt;: @iornstein.
- &lt;a href="https://github.com/meilisearch/charabia"&gt;Charabia&lt;/a&gt;: @luflow, @tkhshtsh0917.&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.11.0" rel="alternate"/>
  </entry>
</feed>
