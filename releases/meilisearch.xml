<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Meilisearch Releases</title>
  <updated>2024-09-14T14:33:23.762580-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.9.0</id>
    <title>New release for Meilisearch: v1.9.0 ü¶é</title>
    <updated>2024-07-01T01:51:03-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;p&gt;Meilisearch v1.9 includes performance improvements for hybrid search and the addition/updating of settings. This version benefits from multiple requested features, such as the new &lt;code&gt;frequency&lt;/code&gt; matching strategy and the ability to retrieve similar documents.&lt;/p&gt;
&lt;!-- The following lines should NOT be put in the PRE-release changelogs --&gt;
&lt;p&gt;üß∞ All official Meilisearch integrations (including SDKs, clients, and other tools) are compatible with this Meilisearch release. Integration deployment happens between 4 to 48 hours after a new version becomes available.&lt;/p&gt;
&lt;!-- The following lines should NOT be put in the PRE-release changelogs --&gt;
&lt;p&gt;Some SDKs might not include all new features. Consult the project repository for detailed information. Is a feature you need missing from your chosen SDK? Create an issue letting us know you need it, or, for open-source karma points, open a PR implementing it (we'll love you for that ‚ù§Ô∏è).&lt;/p&gt;
&lt;h1&gt;New features and updates üî•&lt;/h1&gt;
&lt;h2&gt;Hybrid search updates&lt;/h2&gt;
&lt;p&gt;This release introduces multiple &lt;a href="https://meilisearch.notion.site/v1-9-AI-search-changes-e90d6803eca8417aa70a1ac5d0225697#38e6d3adf40e4ef1be14a3c4be39df94"&gt;hybrid search updates&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Done by @dureuill and @irevoire in #4633 and #4649&lt;/p&gt;
&lt;h3&gt;‚ö†Ô∏è Breaking change: Empty &lt;code&gt;_vectors.embedder&lt;/code&gt; arrays&lt;/h3&gt;
&lt;p&gt;Empty &lt;code&gt;_vectors.embedder&lt;/code&gt; arrays are now interpreted as having no vector embedding.&lt;/p&gt;
&lt;p&gt;Before v1.9, Meilisearch interpreted these as a single embedding of dimension 0. This change follows user feedback that the previous behavior was unexpected and unhelpful.&lt;/p&gt;
&lt;h3&gt;‚ö†Ô∏è Breaking change: &lt;code&gt;_vectors&lt;/code&gt; field no longer present in search results&lt;/h3&gt;
&lt;p&gt;When the experimental &lt;code&gt;vectorStore&lt;/code&gt; feature is enabled, Meilisearch no longer includes &lt;code&gt;_vectors&lt;/code&gt; in returned search results by default. This will considerably improve performance.&lt;/p&gt;
&lt;p&gt;Use the new &lt;code&gt;retrieveVectors&lt;/code&gt; search parameter to display the &lt;code&gt;_vectors&lt;/code&gt; field:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl \
  -X POST 'http://localhost:7700/indexes/INDEX_NAME/search' \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "q": "SEARCH QUERY",
    "retrieveVectors": true
  }'&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;‚ö†Ô∏è Breaking change: Meilisearch no longer preserves the exact representation of embeddings appearing in &lt;code&gt;_vectors&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;In order to save storage and run faster, Meilisearch is no longer storing your vector "as-is". Meilisearch now returns the float in a canonicalized representation rather than the user-provided representation.&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;3&lt;/code&gt; may be represented as &lt;code&gt;3.0&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Document &lt;code&gt;_vectors&lt;/code&gt; accepts object values&lt;/h3&gt;
&lt;p&gt;The document &lt;code&gt;_vectors&lt;/code&gt; field now accepts objects in addition to embedding arrays:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
  "id": 42,
  "_vectors": {
    "default": [0.1, 0.2 ],
    "text": {
      "embeddings": [[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]],
      "regenerate": false
    },
    "translation": {
      "embeddings": [0.1, 0.2, 0.3, 0.4],
      "regenerate": true
    }
  }
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;_vectors&lt;/code&gt; object may contain two fields: &lt;code&gt;embeddings&lt;/code&gt; and &lt;code&gt;regenerate&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If present, &lt;code&gt;embeddings&lt;/code&gt; will replace this document's embeddings.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;regenerate&lt;/code&gt; must be either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;regenerate: true&lt;/code&gt;, Meilisearch will overwrite the document embeddings each time the document is updated in the future. If &lt;code&gt;regenerate: false&lt;/code&gt;, Meilisearch will keep the last provided or generated embeddings even if the document is updated in the future.&lt;/p&gt;
&lt;p&gt;This change allows importing embeddings to autoembedders as a one-shot process, by setting them as &lt;code&gt;regenerate: true&lt;/code&gt;. This change also ensures embeddings are not regenerated when importing a dump created with Meilisearch v1.9.&lt;/p&gt;
&lt;p&gt;Meilisearch v1.9.0 also improves performance when indexing and using hybrid search, avoiding useless operations and optimizing the important ones.&lt;/p&gt;
&lt;h2&gt;New feature: Ranking score threshold&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;rankingScoreThreshold&lt;/code&gt; to exclude search results with low ranking scores:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
 -X POST 'http://localhost:7700/indexes/movies/search' \
 -H 'Content-Type: application/json' \
 --data-binary '{
    "q": "Badman dark returns 1",
    "showRankingScore": true,
    "limit": 5,
    "rankingScoreThreshold": 0.2
 }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Meilisearch does not return any documents below the configured threshold. Excluded results do not count towards &lt;code&gt;estimatedTotalHits&lt;/code&gt;, &lt;code&gt;totalHits&lt;/code&gt;, and facet distribution.&lt;/p&gt;
&lt;p&gt;‚ö†Ô∏è For performance reasons, if the number of documents above &lt;code&gt;rankingScoreThreshold&lt;/code&gt; is higher than &lt;code&gt;limit&lt;/code&gt;, Meilisearch does not evaluate the ranking score of the remaining documents. Results ranking below the threshold are not immediately removed from the set of candidates. In this case, Meilisearch may overestimate the count of &lt;code&gt;estimatedTotalHits&lt;/code&gt;, &lt;code&gt;totalHits&lt;/code&gt; and facet distribution.&lt;/p&gt;
&lt;p&gt;Done by @dureuill in #4666&lt;/p&gt;
&lt;h2&gt;New feature: Get similar documents endpoint&lt;/h2&gt;
&lt;p&gt;This release introduces a new AI-powered search feature allowing you to send a document to Meilisearch and receive a list of similar documents in return.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;/indexes/{indexUid}/similar&lt;/code&gt; endpoint to query Meilisearch for related documents:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl \
  -X POST /indexes/:indexUid/similar
  -H 'Content-Type: application/json' \
  --data-binary '{
    "id": "23",
    "offset": 0,
    "limit": 2,
    "filter": "release_date &amp;gt; 1521763199",
    "embedder": "default",
    "attributesToRetrieve": [],
    "showRankingScore": false,
    "showRankingScoreDetails": false
  }'&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;: string indicating the document needing similar results, required&lt;/li&gt;
&lt;li&gt;&lt;code&gt;offset&lt;/code&gt;: number of results to skip when paginating, optional, defaults to &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;limit&lt;/code&gt;: number of results to display, optional, defaults to &lt;code&gt;20&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter&lt;/code&gt;: string with a filter expression Meilisearch should apply to the results, optional, defaults to &lt;code&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;embedder&lt;/code&gt;: string indicating the embedder Meilisearch should use to retrieve similar documents, optional, defaults to &lt;code&gt;"default"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attributesToRetrieve&lt;/code&gt;: array of strings indicating which fields Meilisearch will include in the response, optional, defaults to &lt;code&gt;["*"]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;showRankingScore&lt;/code&gt;: boolean indicating if results should include ranking score information, optional, defaults to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;showRankingScoreDetails&lt;/code&gt;: boolean indicating if results should include detailed ranking score information, optional, defaults to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rankingScoreThreshold&lt;/code&gt;: Excludes search results with a ranking score lower than the defined number, optional, defaults to &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;/indexes/{indexUid}/similar&lt;/code&gt; supports &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; routes. Use URL query parameters to configure your &lt;code&gt;GET&lt;/code&gt; request, or include your parameters in the request body if using the &lt;code&gt;POST&lt;/code&gt; route.  Both offer identical functionality.&lt;/p&gt;
&lt;p&gt;Done by @dureuill in #4647&lt;/p&gt;
&lt;h2&gt;New feature: &lt;code&gt;frequency&lt;/code&gt; matching strategy&lt;/h2&gt;
&lt;p&gt;This release adds a new matching strategy, &lt;code&gt;frequency&lt;/code&gt;. Use it to prioritize results containing the least frequent query terms:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
 -X POST 'http://localhost:7700/indexes/{index_uid}/search' \
 -H 'Content-Type: application/json' \
 --data-binary '{
    "q": "cheval blanc",
    "matchingStrategy": "frequency"
 }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Done by @ManyTheFish in #4667&lt;/p&gt;
&lt;h2&gt;Set &lt;code&gt;distinctAttribute&lt;/code&gt; at search time&lt;/h2&gt;
&lt;p&gt;This release introduces a new search parameter: &lt;code&gt;distinct&lt;/code&gt; which you can use to specify the distinct attribute at search time:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
 -X POST 'http://localhost:7700/indexes/{index_uid}/search' \
 -H 'Content-Type: application/json' \
 --data-binary '{
    "q": "kefir le double poney",
    "distinct": "book.isbn"
 }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If a distinct attribute is already defined in the settings it'll be ignored in favor of the one defined at search time.&lt;/p&gt;
&lt;p&gt;Done by @Kerollmops in #4693&lt;/p&gt;
&lt;h2&gt;Improve indexing speed when updating/adding settings&lt;/h2&gt;
&lt;p&gt;Meilisearch now limits operations when importing settings by avoiding unnecessary writing operations in its internal database and reducing disk usage.&lt;/p&gt;
&lt;p&gt;Additionally, when changing embedding settings, Meilisearch will now only regenerate the embeddings for the embedders whose settings have been modified, instead of for all embedders. When only the &lt;code&gt;documentTemplate&lt;/code&gt; is modified, embeddings will only be regenerated for documents where this modification leads to a different text to embed.&lt;/p&gt;
&lt;p&gt;Done by @irevoire, @Kerollmops, @ManyTheFish and @dureuill in #4646, #4680, #4631 and #4649&lt;/p&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Speed up filter ANDs operations during the search (#4682) @Kerollmops&lt;/li&gt;
&lt;li&gt;Speed up facet distribution during the search (#4713) @Kerollmops&lt;/li&gt;
&lt;li&gt;Improve language support (#4684) @ManyTheFish @Soham1803 @mosuka @tkhshtsh0917&lt;/li&gt;
&lt;li&gt;Add new normalizer to normalize ≈ì to oe and √¶ to ae&lt;/li&gt;
&lt;li&gt;Fix &lt;code&gt;chinese-normalization-pinyin&lt;/code&gt; feature flag compilation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orgs/meilisearch/discussions/625"&gt;Prometheus experimental feature&lt;/a&gt;: Use HTTP path pattern instead of full path in metrics (#4619) @gh2k&lt;/li&gt;
&lt;li&gt;‚ö†Ô∏è Remove &lt;code&gt;exportPuffinReport&lt;/code&gt; experimental feature. Use &lt;a href="https://github.com/orgs/meilisearch/discussions/721"&gt;logs routes&lt;/a&gt; and &lt;a href="https://github.com/orgs/meilisearch/discussions/723"&gt;logs modes&lt;/a&gt; instead (#4655) @Kerollmops&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Fixes üêû&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;All fields now have the same impact on relevancy when &lt;code&gt;searchableAttributes: ["*"]&lt;/code&gt;. Consult the &lt;a href="https://github.com/meilisearch/meilisearch/issues/4639"&gt;GitHub issue for a detailed breakdown of these changes&lt;/a&gt; (#4631) @irevoire&lt;/li&gt;
&lt;li&gt;Fix &lt;code&gt;searchableAttributes&lt;/code&gt; behavior when handling nested fields. Consult the &lt;a href="https://github.com/meilisearch/meilisearch/issues/4639"&gt;GitHub issue for more information&lt;/a&gt; (#4631) @irevoire&lt;/li&gt;
&lt;li&gt;Fix security issue in dependency: bump Rustls to non-vulnerable versions (#4622) @Kerollmops&lt;/li&gt;
&lt;li&gt;Reset other embedding settings when changing the &lt;code&gt;source&lt;/code&gt; of an embedder. This prevents &lt;a href="https://github.com/meilisearch/meilisearch/issues/4690"&gt;misleading error messages when configuring the embedders&lt;/a&gt; (#4649) @dureuill&lt;/li&gt;
&lt;li&gt;Fix panic in hybrid search when removing all embedders from the DB (#4715) @irevoire&lt;/li&gt;
&lt;li&gt;Hybrid search now respects the &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;limit&lt;/code&gt; parameters when returning keyword results early (#4746) @dureuill&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Misc&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Dependencies updates&lt;/li&gt;
&lt;li&gt;Update actix-web 4.5.1 -&amp;gt; 4.6.0 (#4675) @dureuill&lt;/li&gt;
&lt;li&gt;Update mini-dashboard to 2.13 -&amp;gt; 2.14 (#4712) @curquiza&lt;/li&gt;
&lt;li&gt;CIs and tests&lt;/li&gt;
&lt;li&gt;Add "precommands" to benchmark (#4624) @dureuill&lt;/li&gt;
&lt;li&gt;Allow to comment with the results of benchmark invocation (#4651) @dureuill&lt;/li&gt;
&lt;li&gt;Fix ci tests (#4685) @ManyTheFish&lt;/li&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;li&gt;Update README.md (#4664) @tpayet&lt;/li&gt;
&lt;li&gt;Misc&lt;/li&gt;
&lt;li&gt;Fix comment typos (#4568) @yudrywet&lt;/li&gt;
&lt;li&gt;Fix comment typos (#4582) @writegr&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‚ù§Ô∏è Thanks again to our external contributors:
- &lt;a href="https://github.com/meilisearch/meilisearch"&gt;Meilisearch&lt;/a&gt;: @gh2k, @writegr, @yudrywet.
- &lt;a href="https://github.com/meilisearch/charabia"&gt;Charabia&lt;/a&gt;: @mosuka, @Soham1803, @tkhshtsh0917.&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.9.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.8.4</id>
    <title>New release for Meilisearch: v1.8.4 ü™º</title>
    <updated>2024-07-15T10:48:43-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;Improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Generate vectors in dumps by @dureuill in https://github.com/meilisearch/meilisearch/pull/4796&lt;/li&gt;
&lt;li&gt;this version provides an upgrade path to &lt;a href="https://github.com/meilisearch/releases/v1.9.0"&gt;v1.9&lt;/a&gt; without regenerating embeddings for autogenerating embedders.&lt;/li&gt;
&lt;li&gt;to upgrade from v1.8.x to v1.9.0 without regenerating embeddings, please follow the following procedure:&lt;ol&gt;
&lt;li&gt;Upgrade from v1.8.x to v1.8.4 by simply restarting Meilisearch v1.8.4 on you v1.8.x DB. No dump is necessary at this step&lt;/li&gt;
&lt;li&gt;Create a dump.&lt;/li&gt;
&lt;li&gt;Import the created dump in a Meilisearch v1.9 &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/meilisearch/meilisearch/compare/v1.8.3...v1.8.4"&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.8.4" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.10.0</id>
    <title>New release for Meilisearch: v1.10.0 ü¶©</title>
    <updated>2024-08-26T01:56:01-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h1&gt;v1.10.0 release changelogs&lt;/h1&gt;
&lt;p&gt;Meilisearch v1.10 introduces federated search. This innovative feature allows you to receive a single list of results for multi-search requests. v1.10 also includes a setting to manually define which language or languages are present in your documents, and two new new experimental features: the &lt;code&gt;CONTAINS&lt;/code&gt; filter operator and the ability to update a subset of your dataset with a function.&lt;/p&gt;
&lt;p&gt;üß∞ All official Meilisearch integrations (including SDKs, clients, and other tools) are compatible with this Meilisearch release. Integration deployment happens between 4 to 48 hours after a new version becomes available.&lt;/p&gt;
&lt;p&gt;Some SDKs might not include all new features. Consult the project repository for detailed information. Is a feature you need missing from your chosen SDK? Create an issue letting us know you need it, or, for open-source karma points, open a PR implementing it (we'll love you for that ‚ù§Ô∏è).&lt;/p&gt;
&lt;h1&gt;New features and updates üî•&lt;/h1&gt;
&lt;h2&gt;Federated search&lt;/h2&gt;
&lt;p&gt;Use the new &lt;code&gt;federation&lt;/code&gt; setting of the &lt;code&gt;/multi-search&lt;/code&gt; route to return a single search result object:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
  -X POST 'http://localhost:7700/multi-search' \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "federation": {
      "offset": 5,
      "limit": 10
    }
    "queries": [
      {
        "q": "Batman",
        "indexUid": "movies"
      },
      {
        "q": "Batman",
        "indexUid": "comics"
      }
    ]
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Response:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json5
{
  "hits": [
    {
      "id": 42,
      "title": "Batman returns",
      "overview": "..",
      "_federation": {
        "indexUid": "movies",
        "queriesPosition": 0
      }
    },
    {
      "comicsId": "batman-killing-joke",
      "description": "..",
      "title": "Batman: the killing joke",
      "_federation": {
        "indexUid": "comics",
        "queriesPosition": 1
      }
    },
    ‚Ä¶
 ],
  processingTimeMs: 0,
  limit: 20,
  offset: 0,
  estimatedTotalHits: 2,
  semanticHitCount: 0,
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When performing a federated search, Meilisearch merges the results coming from different sources in descending ranking score order.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;federation&lt;/code&gt; is empty (&lt;code&gt;{}&lt;/code&gt;), Meilisearch  sets &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;limit&lt;/code&gt; to 0 and 20 respectively.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;federation&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or missing, multi-search returns one list of search result objects for each index.&lt;/p&gt;
&lt;h3&gt;Federated results relevancy&lt;/h3&gt;
&lt;p&gt;When performing federated searches, use &lt;code&gt;federationOptions&lt;/code&gt; in the request's &lt;code&gt;queries&lt;/code&gt; array to configure the relevancy and the weight of each index:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
 -X POST 'http://localhost:7700/multi-search' \
 -H 'Content-Type: application/json' \
 --data-binary '{
  "federation": {},
  "queries": [
    {
      "q": "apple red",
      "indexUid": "fruits",
      "filter": "BOOSTED = true",
      "_showRankingScore": true,
      "federationOptions": {
        "weight": 3.0
      }
    },
    {
      "q": "apple red",
      "indexUid": "fruits",
      "_showRankingScore": true,
    }
  ]
}'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;federationOptions&lt;/code&gt; must be an object. It supports a single field, &lt;code&gt;weight&lt;/code&gt;, which must be a positive floating-point number:
- if &lt;code&gt;weight&lt;/code&gt; &amp;lt; &lt;code&gt;1.0&lt;/code&gt;, results from this index are &lt;strong&gt;less&lt;/strong&gt; likely to appear in the results
- if &lt;code&gt;weight&lt;/code&gt; &amp;gt; &lt;code&gt;1.0&lt;/code&gt;, results from this index are &lt;strong&gt;more&lt;/strong&gt; likely to appear in the results
- if not specified, &lt;code&gt;weight&lt;/code&gt; defaults to &lt;code&gt;1.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;üìñ Consult the &lt;a href="https://meilisearch.notion.site/v1-10-federated-search-698dfe36ab6b4668b044f735fb40f0b2"&gt;usage page&lt;/a&gt; for more information about the merge algorithm.&lt;/p&gt;
&lt;p&gt;Done by @dureuill in #4769.&lt;/p&gt;
&lt;h2&gt;Experimental: &lt;code&gt;CONTAINS&lt;/code&gt; filter operator&lt;/h2&gt;
&lt;p&gt;Enable the &lt;code&gt;containsFilter&lt;/code&gt; experimental feature to use the &lt;code&gt;CONTAINS&lt;/code&gt; filter operator:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
  -X PATCH 'http://localhost:7700/experimental-features/' \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "containsFilter": true
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CONTAINS&lt;/code&gt; filters results containing partial matches to the specified string, similar to a SQL &lt;code&gt;LIKE&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
  -X POST http://localhost:7700/indexes/movies/search \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "q": "super hero",
    "filter": "synopsis CONTAINS spider"
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;üó£Ô∏è This is an experimental feature, and we need your help to improve it! Share your thoughts and feedback on this &lt;a href="https://github.com/orgs/meilisearch/discussions/763"&gt;GitHub discussion&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Done by @irevoire in #4804.&lt;/p&gt;
&lt;h2&gt;Language settings&lt;/h2&gt;
&lt;p&gt;Use the new &lt;code&gt;localizedAttributes&lt;/code&gt; index setting and the &lt;code&gt;locales&lt;/code&gt; search parameter to explicitly set the languages used in document fields and the search query itself. This is particularly useful for &amp;lt;=v1.9 users who have to occasionally resort to alternative Meilisearch images due to language auto-detect issues in &lt;a href="https://github.com/meilisearch/meilisearch/pull/4604"&gt;Swedish&lt;/a&gt; and &lt;a href="https://github.com/meilisearch/meilisearch/pull/3882"&gt;Japanese&lt;/a&gt; datasets.&lt;/p&gt;
&lt;p&gt;Done by @ManyTheFish in #4819.&lt;/p&gt;
&lt;h3&gt;Set language during indexing with &lt;code&gt;localizedAttributes&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Use the newly introduced &lt;code&gt;localizedAttributes&lt;/code&gt; setting to explicitly declare which languages correspond to which document fields:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
  -X PATCH 'http://localhost:7700/indexes/movies/settings' \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "localizedAttributes": [
      {"locales": ["jpn"], "attributePatterns": ["*_ja"]},
      {"locales": ["eng"], "attributePatterns": ["*_en"]},
      {"locales": ["cmn"], "attributePatterns": ["*_zh"]},
      {"locales": ["fra", "ita"], "attributePatterns": ["latin.*"]},
      {"locales": [], "attributePatterns": ["*"]}
    ]
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;locales&lt;/code&gt; is a list of ISO-639-3 language codes to assign to a pattern. The currently supported languages are: &lt;code&gt;epo&lt;/code&gt;, &lt;code&gt;eng&lt;/code&gt;, &lt;code&gt;rus&lt;/code&gt;, &lt;code&gt;cmn&lt;/code&gt;, &lt;code&gt;spa&lt;/code&gt;, &lt;code&gt;por&lt;/code&gt;, &lt;code&gt;ita&lt;/code&gt;, &lt;code&gt;ben&lt;/code&gt;, &lt;code&gt;fra&lt;/code&gt;, &lt;code&gt;deu&lt;/code&gt;, &lt;code&gt;ukr&lt;/code&gt;, &lt;code&gt;kat&lt;/code&gt;, &lt;code&gt;ara&lt;/code&gt;, &lt;code&gt;hin&lt;/code&gt;, &lt;code&gt;jpn&lt;/code&gt;, &lt;code&gt;heb&lt;/code&gt;, &lt;code&gt;yid&lt;/code&gt;, &lt;code&gt;pol&lt;/code&gt;, &lt;code&gt;amh&lt;/code&gt;, &lt;code&gt;jav&lt;/code&gt;, &lt;code&gt;kor&lt;/code&gt;, &lt;code&gt;nob&lt;/code&gt;, &lt;code&gt;dan&lt;/code&gt;, &lt;code&gt;swe&lt;/code&gt;, &lt;code&gt;fin&lt;/code&gt;, &lt;code&gt;tur&lt;/code&gt;, &lt;code&gt;nld&lt;/code&gt;, &lt;code&gt;hun&lt;/code&gt;, &lt;code&gt;ces&lt;/code&gt;, &lt;code&gt;ell&lt;/code&gt;, &lt;code&gt;bul&lt;/code&gt;, &lt;code&gt;bel&lt;/code&gt;, &lt;code&gt;mar&lt;/code&gt;, &lt;code&gt;kan&lt;/code&gt;, &lt;code&gt;ron&lt;/code&gt;, &lt;code&gt;slv&lt;/code&gt;, &lt;code&gt;hrv&lt;/code&gt;, &lt;code&gt;srp&lt;/code&gt;, &lt;code&gt;mkd&lt;/code&gt;, &lt;code&gt;lit&lt;/code&gt;, &lt;code&gt;lav&lt;/code&gt;, &lt;code&gt;est&lt;/code&gt;, &lt;code&gt;tam&lt;/code&gt;, &lt;code&gt;vie&lt;/code&gt;, &lt;code&gt;urd&lt;/code&gt;, &lt;code&gt;tha&lt;/code&gt;, &lt;code&gt;guj&lt;/code&gt;, &lt;code&gt;uzb&lt;/code&gt;, &lt;code&gt;pan&lt;/code&gt;, &lt;code&gt;aze&lt;/code&gt;, &lt;code&gt;ind&lt;/code&gt;, &lt;code&gt;tel&lt;/code&gt;, &lt;code&gt;pes&lt;/code&gt;, &lt;code&gt;mal&lt;/code&gt;, &lt;code&gt;ori&lt;/code&gt;, &lt;code&gt;mya&lt;/code&gt;, &lt;code&gt;nep&lt;/code&gt;, &lt;code&gt;sin&lt;/code&gt;, &lt;code&gt;khm&lt;/code&gt;, &lt;code&gt;tuk&lt;/code&gt;, &lt;code&gt;aka&lt;/code&gt;, &lt;code&gt;zul&lt;/code&gt;, &lt;code&gt;sna&lt;/code&gt;, &lt;code&gt;afr&lt;/code&gt;, &lt;code&gt;lat&lt;/code&gt;, &lt;code&gt;slk&lt;/code&gt;, &lt;code&gt;cat&lt;/code&gt;, &lt;code&gt;tgl&lt;/code&gt;, &lt;code&gt;hye&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;attributePattern&lt;/code&gt; is a pattern that can start or end with a &lt;code&gt;*&lt;/code&gt; to match one or several attributes.&lt;/p&gt;
&lt;p&gt;If an attribute matches several rules, only the first rule in the list will be applied. If the locales list is empty, then Meilisearch is allowed to auto-detect any language in the matching attributes.&lt;/p&gt;
&lt;p&gt;These rules are applied to the &lt;code&gt;searchableAttributes&lt;/code&gt;, the &lt;code&gt;filterableAttributes&lt;/code&gt;, and the &lt;code&gt;sortableAttributes&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Set language at search time with &lt;code&gt;locales&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;/search&lt;/code&gt; route accepts a new parameter, &lt;code&gt;locales&lt;/code&gt;. Use it to define the language used in the current query:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
  -X POST http://localhost:7700/indexes/movies/search \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "q": "ÈÄ≤ÊíÉ„ÅÆÂ∑®‰∫∫",
    "locales": ["jpn"]
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;locales&lt;/code&gt; parameter overrides eventual &lt;code&gt;locales&lt;/code&gt; in the index settings.&lt;/p&gt;
&lt;h2&gt;Experimental: Edit documents with a Rhai function&lt;/h2&gt;
&lt;p&gt;Use a &lt;a href="https://rhai.rs/"&gt;Rhai function&lt;/a&gt; to edit documents in your database directly from Meilisearch:&lt;/p&gt;
&lt;p&gt;First, activate the experimental feature:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
  -X PATCH 'http://localhost:7700/experimental-features/' \
  -H 'Content-Type: application/json' \
  --data-binary '{
    "editDocumentsByFunction": true
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then query the &lt;code&gt;/documents/edit&lt;/code&gt; route with the editing function:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl http://localhost:7700/indexes/movies/documents/edit \
  -H 'content-type: application/json' \
  -d '{
   "function": "doc.title = `‚ú® ${doc.title.to_upper()} ‚ú®`",
   "filter": "id &amp;gt; 3000"
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/documents/edit&lt;/code&gt; accepts three parameters in its payload: &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, and &lt;code&gt;context&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;function&lt;/code&gt; must be a string with a Rhai function. &lt;code&gt;filter&lt;/code&gt; must be a &lt;a href="https://www.meilisearch.com/docs/learn/filtering_and_sorting/filter_expression_reference"&gt;filter expression.&lt;/a&gt;. &lt;code&gt;context&lt;/code&gt; must be an object with data you want to make available for the editing function.&lt;/p&gt;
&lt;p&gt;üìñ More information &lt;a href="https://meilisearch.notion.site/Update-Documents-by-Function-0cff8fea7655436592e7c8a6de932062"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;üó£Ô∏è This is an experimental feature and we need your help to improve it! Share your thoughts and feedback on this &lt;a href="https://github.com/orgs/meilisearch/discussions/762"&gt;GitHub discussion&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Done by @Kerollmops in #4626.&lt;/p&gt;
&lt;h2&gt;Experimental AI-powered search: quality of life improvements&lt;/h2&gt;
&lt;p&gt;For the purpose of future stabilization of the feature, we are applying changes and quality-of-life improvements.&lt;/p&gt;
&lt;p&gt;Done by @dureuill in #4801, #4815, #4818, #4822.&lt;/p&gt;
&lt;h3&gt;‚ö†Ô∏è Breaking changes: Changing the parameters of the REST API&lt;/h3&gt;
&lt;p&gt;The old parameters of the REST API are too numerous and confusing.&lt;/p&gt;
&lt;p&gt;Removed parameters: &lt;code&gt;query&lt;/code&gt; , &lt;code&gt;inputField&lt;/code&gt;, &lt;code&gt;inputType&lt;/code&gt;, &lt;code&gt;pathToEmbeddings&lt;/code&gt; and &lt;code&gt;embeddingObject&lt;/code&gt;.
Replaced by:
- &lt;code&gt;request&lt;/code&gt; : A JSON value that represents the request made by Meilisearch to the remote embedder. The text to embed must be replaced by the placeholder value &lt;code&gt;‚Äú{{text}}‚Äù&lt;/code&gt;.
- &lt;code&gt;response&lt;/code&gt;: A JSON value that represents a fragment of the response made by the remote embedder to Meilisearch. The embedding must be replaced by the placeholder value &lt;code&gt;"{{embedding}}"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Before:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json5
// v1.10 version ‚úÖ
{
  "source": "rest",
  "url": "https://localhost:10006",
  "request": {
    "model": "minillm",
    "prompt": "{{text}}"
  },
  "response": {
    "embedding": "{{embedding}}"
  }
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json5
// v1.9 version ‚ùå
{
  "source": "rest",
  "url": "https://localhost:10006",
  "query": {
    "model": "minillm",
  },
  "inputField": ["prompt"],
  "inputType": "text",
  "embeddingObject": ["embedding"]
}&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!CAUTION]
This is a breaking change to the configuration of REST embedders.
Importing a dump containing a REST embedder configuration will fail in v1.10 with an error: "Error: unknown field &lt;code&gt;query&lt;/code&gt;, expected one of &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;revision&lt;/code&gt;, &lt;code&gt;apiKey&lt;/code&gt;, &lt;code&gt;dimensions&lt;/code&gt;, &lt;code&gt;documentTemplate&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;response&lt;/code&gt;, &lt;code&gt;distribution&lt;/code&gt; at line 1 column 752".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Upgrade procedure:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Remove embedders with source &lt;code&gt;"rest"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Update your &lt;a href="https://www.meilisearch.com/docs/learn/update_and_migration/updating#updating-meilisearch-cloud"&gt;Meilisearch Cloud project&lt;/a&gt; or &lt;a href="https://www.meilisearch.com/docs/learn/update_and_migration/updating#updating-a-self-hosted-meilisearch-instance"&gt;self-hosted Meilisearch instance&lt;/a&gt; as usual&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Add custom headers to REST embedders&lt;/h3&gt;
&lt;p&gt;When the &lt;code&gt;source&lt;/code&gt; of an embedder is set to &lt;code&gt;rest&lt;/code&gt;, you may include an optional &lt;code&gt;headers&lt;/code&gt; parameter. Use this to configure custom headers you want Meilisearch to include in the requests it sends the embedder.&lt;/p&gt;
&lt;p&gt;Embedding requests sent from Meilisearch to a remote REST embedder always contain two headers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Authorization: Bearer &amp;lt;apiKey&amp;gt;&lt;/code&gt; (only if &lt;code&gt;apiKey&lt;/code&gt; was provided)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Content-Type: application/json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When provided, &lt;code&gt;headers&lt;/code&gt; should be a JSON object whose keys represent the name of additional headers to send in requests, and the values represent the value of these additional headers.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;headers&lt;/code&gt; is missing or &lt;code&gt;null&lt;/code&gt; for a &lt;code&gt;rest&lt;/code&gt; embedder, only &lt;code&gt;Authorization&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt; are sent, as described above.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;headers&lt;/code&gt; contains &lt;code&gt;Authorization&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt;, the declared values will override the ones that are sent by default.&lt;/p&gt;
&lt;p&gt;Using the &lt;code&gt;headers&lt;/code&gt; parameter for any other &lt;code&gt;source&lt;/code&gt; besides &lt;code&gt;rest&lt;/code&gt; results in an &lt;code&gt;invalid_settings_embedder&lt;/code&gt; error.&lt;/p&gt;
&lt;h3&gt;Other quality-of-life improvements&lt;/h3&gt;
&lt;p&gt;üìñ More details &lt;a href="https://meilisearch.notion.site/v1-10-AI-search-changes-737c9d7d010d4dd685582bf5dab579e2"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;url&lt;/code&gt; parameter to the OpenAI embedder. &lt;code&gt;url&lt;/code&gt; should be an URL to the embedding endpoint (including the v1/embeddingspart) from OpenAI. If &lt;code&gt;url&lt;/code&gt; is missing or &lt;code&gt;null&lt;/code&gt; for an &lt;code&gt;openAi&lt;/code&gt; embedder, the default OpenAI embedding route will be used (https://api.openai.com/v1/embeddings).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dimensions&lt;/code&gt; is now available as an optional parameter for &lt;code&gt;ollama&lt;/code&gt; embedders. Previously it was only available for rest, &lt;code&gt;openAi&lt;/code&gt; and &lt;code&gt;userProvided&lt;/code&gt; embedders.&lt;/li&gt;
&lt;li&gt;Previously &lt;code&gt;_vectors.embedder&lt;/code&gt; was omitted for documents without at least one embedding for &lt;code&gt;embedder&lt;/code&gt;. This was inconsistent and prevented the user from checking the value of &lt;code&gt;regenerate&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;When a request to a REST embedder fails, the duration of the exponential backoff is now randomized up to twice its base duration&lt;/li&gt;
&lt;li&gt;Truncate rather than embed by chunk when OpenAI embeddings are bigger than the max number of tokens&lt;/li&gt;
&lt;li&gt;Improve error message when indexing documents and embeddings are missing for a user-provided embedder&lt;/li&gt;
&lt;li&gt;Improve error message when a model configuration cannot be loaded and its "architectures" field does not contain "BertModel"&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;‚ö†Ô∏è Important change regarding the minimal Ubuntu version compatible with Meilisearch&lt;/h2&gt;
&lt;p&gt;Because the GitHub Actions runner now enforces the usage of a Node version that is not compatible with Ubuntu 18.04 anymore, we had to upgrade the minimal Ubuntu version compatible with Meilisearch. Indeed, we use these GitHub actions to build and provide our binaries.&lt;/p&gt;
&lt;p&gt;Now, Meilisearch is only compatible with Ubuntu 20.04 and later and not with Ubuntu 18.4 anymore.&lt;/p&gt;
&lt;p&gt;Done by @curquiza in #4783.&lt;/p&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Search speed optimization: implement intersection at the end of the search pipeline by @Kerollmops in #4717&lt;/li&gt;
&lt;li&gt;Indexing speed optimization: stop opening indexes to only check if they exist by @Karribalu in #4787&lt;/li&gt;
&lt;li&gt;Improve tenant token error messages by @irevoire in #4724&lt;/li&gt;
&lt;li&gt;Add null byte as hard context separator by @LukasKalbertodt in meilisearch/charabia#295&lt;/li&gt;
&lt;li&gt;Adds all &lt;a href="https://www.compart.com/en/unicode/category/Sm"&gt;math symbols&lt;/a&gt; to the default separator list by @phillitrOSU in meilisearch/charabia#301&lt;/li&gt;
&lt;li&gt;Errors emitted at the main level of the Meilisearch binary are now logged with level &lt;code&gt;ERROR&lt;/code&gt; by @dureuill in #4835&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Fixes üêû&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Fix invalid primary key for big numbers @JWSong in #4725&lt;/li&gt;
&lt;li&gt;Fix wrong HTTP status and confusing error message on wrong payload by @Karribalu in #4716&lt;/li&gt;
&lt;li&gt;Fix the missing geo distance when one or both of the lat/lng are string by @irevoire in #4731&lt;/li&gt;
&lt;li&gt;Fix errors related to &lt;code&gt;OffsetDateTime&lt;/code&gt;: use a fixed date format regardless of features by @dureuill in #4850&lt;/li&gt;
&lt;li&gt;Fix filter that doesn't return valid documents by @dureuill in #4864 &amp;amp; #4858&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Misc&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Dependencies updates&lt;/li&gt;
&lt;li&gt;Update most of the dependencies by @irevoire in #4786&lt;/li&gt;
&lt;li&gt;Update yaup by @irevoire in #4703&lt;/li&gt;
&lt;li&gt;Bump docker/build-push-action from 5 to 6 by @dependabot in #4758&lt;/li&gt;
&lt;li&gt;Bump zerovec from 0.10.1 to 0.10.4 by @dependabot in #4785&lt;/li&gt;
&lt;li&gt;Update rustls as much as possible by @irevoire in #4806&lt;/li&gt;
&lt;li&gt;CIs and tests&lt;/li&gt;
&lt;li&gt;Fix CI with Rust v1.79 by @dureuill in #4723&lt;/li&gt;
&lt;li&gt;Fix flaky test by @irevoire in #4730&lt;/li&gt;
&lt;li&gt;Specify the rust toolchain by @irevoire in #4706&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;vX&lt;/code&gt; Docker tag when publishing Docker image by @curquiza in #4761&lt;/li&gt;
&lt;li&gt;Add search benchmarks by @dureuill in #4762&lt;/li&gt;
&lt;li&gt;Add tests on the rest embedder by @irevoire and @dureuill in #4755&lt;/li&gt;
&lt;li&gt;Add OpenAI tests by @dureuill in #4846&lt;/li&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;li&gt;Add june 11th webinar banner by @Strift in #4691&lt;/li&gt;
&lt;li&gt;Revert "Add june 11th webinar banner" by @curquiza in #4705&lt;/li&gt;
&lt;li&gt;Update the README to link more demos by @Kerollmops in #4711&lt;/li&gt;
&lt;li&gt;Update README.md by @Strift in #4721&lt;/li&gt;
&lt;li&gt;Change the Meilisearch logo to the kawaii version by @Kerollmops in #4778&lt;/li&gt;
&lt;li&gt;Misc&lt;/li&gt;
&lt;li&gt;New workload to ignore the initial compression phase by @Kerollmops in #4773&lt;/li&gt;
&lt;li&gt;Rename the sortable into the filterable movies workload by @Kerollmops in #4774&lt;/li&gt;
&lt;li&gt;Correct apk usages in Dockerfile by @PeterDaveHello in #4781&lt;/li&gt;
&lt;li&gt;Make milli use edition 2021 by @hanbings in #4770&lt;/li&gt;
&lt;li&gt;Allow &lt;code&gt;MEILI_NO_VERGEN&lt;/code&gt; env var to skip vergen by @dureuill in #4812&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‚ù§Ô∏è Thanks again to our external contributors:
- &lt;a href="https://github.com/meilisearch/meilisearch"&gt;Meilisearch&lt;/a&gt;: @Karribalu, @hanbings, @junhochoi, @JWSong, @PeterDaveHello.
- &lt;a href="https://github.com/meilisearch/charabia"&gt;Charabia&lt;/a&gt;: @LukasKalbertodt, @phillitrOSU.&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.10.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.9.1</id>
    <title>New release for Meilisearch: v1.9.1 ü¶é</title>
    <updated>2024-08-27T16:39:40-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;Fixes ü™≤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Return an empty list of embeddings for embedders that have no document for an embedder. by @dureuill in https://github.com/meilisearch/meilisearch/pull/4889&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This fixes an issue where dumps created for indexes with:
1. A user-provided embedder
2. At least one documents that opt-out of vectors for that user-provided embedder&lt;/p&gt;
&lt;p&gt;would fail to import correctly.&lt;/p&gt;
&lt;h2&gt;Upgrade path to v1.10.0 üöÄ&lt;/h2&gt;
&lt;p&gt;If you are a Cloud user affected by the above issue, please contact customer support so we perform the upgrade for you.&lt;/p&gt;
&lt;p&gt;If you are an OSS user affected by the above, perform the following operations:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Upgrade from v1.9.0 to v1.9.1 without using a dump&lt;/li&gt;
&lt;li&gt;Upgrade to v1.10.0 using a dump created from v1.9.1&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://github.com/meilisearch/meilisearch/compare/v1.9.0...v1.9.1"&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.9.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.10.1</id>
    <title>New release for Meilisearch: v1.10.1 ü¶©</title>
    <updated>2024-09-02T05:59:14-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;Fixes ü¶ã&lt;/h2&gt;
&lt;h3&gt;Better search handling under heavy loads&lt;/h3&gt;
&lt;p&gt;All of the next PR should make meilisearch behave better under heavy loads:
* Only spawn one search queue in actix-web by @irevoire in https://github.com/meilisearch/meilisearch/pull/4893
* Make sure the index scheduler never stops running by @irevoire in https://github.com/meilisearch/meilisearch/pull/4896
* Explicitly drop the search permits by @irevoire in https://github.com/meilisearch/meilisearch/pull/4898
* Stop trying to process searches after one minute by @irevoire in https://github.com/meilisearch/meilisearch/pull/4899&lt;/p&gt;
&lt;h2&gt;Speed improvement üêé&lt;/h2&gt;
&lt;p&gt;We made the autobatching of the document deletion with the document deletion by filter possible which should uncklog the task queue of the people using these two operations heavily.
Meilisearch still cannot autobatch the document deletion by filter and the document addition, though.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Autobatch document deletion by filter by @irevoire in https://github.com/meilisearch/meilisearch/pull/4901&lt;/li&gt;
&lt;li&gt;Do not fail the whole batch when a single document deletion by filter fails by @irevoire in https://github.com/meilisearch/meilisearch/pull/4905&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/meilisearch/meilisearch/compare/v1.10.0...v1.10.1&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.10.1" rel="alternate"/>
  </entry>
</feed>
