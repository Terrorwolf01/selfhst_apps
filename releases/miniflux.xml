<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Miniflux Releases</title>
  <updated>2024-04-24T19:31:45.384954-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/miniflux/v2/releases/tag/2.0.50</id>
    <title>New release for Miniflux: Miniflux 2.0.50</title>
    <updated>2023-11-12T12:43:39-05:00</updated>
    <author>
      <name>miniflux/v2</name>
    </author>
    <content>&lt;ul&gt;
&lt;li&gt;Add WebAuthn / Passkey integration&lt;/li&gt;
&lt;li&gt;Add RSS-Bridge integration&lt;/li&gt;
&lt;li&gt;Take RSS TTL field into consideration to schedule next check date&lt;/li&gt;
&lt;li&gt;Show number of visible entries instead of number of read entries in feed list&lt;/li&gt;
&lt;li&gt;OpenID Connect: Redirect to configured user home page after successful authentication&lt;/li&gt;
&lt;li&gt;Google Reader API fixes:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;user/{userID}/state/com.google/read&lt;/code&gt; is missing in categories section for read entries&lt;/li&gt;
&lt;li&gt;Take &lt;code&gt;ExcludeTargets&lt;/code&gt; into consideration in feed stream handler&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Allow iframes pointing to Twitch videos&lt;/li&gt;
&lt;li&gt;Filter feed entries based on URL or title&lt;/li&gt;
&lt;li&gt;Take into consideration &lt;code&gt;hide_globally&lt;/code&gt; property defined for categories in &lt;code&gt;/v1/entries&lt;/code&gt; API endpoint&lt;/li&gt;
&lt;li&gt;Add category ID to webhooks request body&lt;/li&gt;
&lt;li&gt;Update date parser to parse more invalid date formats&lt;/li&gt;
&lt;li&gt;Refactor feed discovery handler, and avoid an extra HTTP request if the URL provided is the feed&lt;/li&gt;
&lt;li&gt;Refactor HTTP Client and &lt;code&gt;LocalizedError&lt;/code&gt; packages&lt;/li&gt;
&lt;li&gt;Refactor Batch Builder, and prevent accidental and excessive refreshes from the web UI&lt;/li&gt;
&lt;li&gt;Refactor icon finder:&lt;ul&gt;
&lt;li&gt;Continue the discovery process when the feed icon is invalid&lt;/li&gt;
&lt;li&gt;Search all icons from the HTML document and do not stop on the first one&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add support for SVG icons with data URL without encoding&lt;/li&gt;
&lt;li&gt;Expose &lt;code&gt;next_check_at&lt;/code&gt; in the web ui and API&lt;/li&gt;
&lt;li&gt;Add database indexes to improve performance&lt;/li&gt;
&lt;li&gt;Change log level to warning for failed feeds refresh in cronjob&lt;/li&gt;
&lt;li&gt;Do not log website without icon as warning&lt;/li&gt;
&lt;li&gt;Add GitHub workflow to build binaries&lt;/li&gt;
&lt;li&gt;Add GitHub extensions to devcontainer&lt;/li&gt;
&lt;li&gt;Make sure to pull the latest base image when building the Docker image&lt;/li&gt;
&lt;li&gt;Strip version prefix when building Debian package&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;github-cli&lt;/code&gt; and &lt;code&gt;docker-outside-of-docker&lt;/code&gt; features to devcontainer&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;golang.org/x/*&lt;/code&gt; dependencies&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/gorilla/mux&lt;/code&gt; from &lt;code&gt;1.8.0&lt;/code&gt; to &lt;code&gt;1.8.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/tdewolff/minify/v2&lt;/code&gt; from &lt;code&gt;2.19.9&lt;/code&gt; to &lt;code&gt;2.20.6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/yuin/goldmark&lt;/code&gt; from &lt;code&gt;1.5.6&lt;/code&gt; to &lt;code&gt;1.6.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/coreos/go-oidc/v3&lt;/code&gt; from &lt;code&gt;3.6.0&lt;/code&gt; to &lt;code&gt;3.7.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/miniflux/v2/releases/tag/2.0.50" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/miniflux/v2/releases/tag/2.0.51</id>
    <title>New release for Miniflux: Miniflux 2.0.51</title>
    <updated>2023-12-13T21:12:52-05:00</updated>
    <author>
      <name>miniflux/v2</name>
    </author>
    <content>&lt;ul&gt;
&lt;li&gt;Add Omnivore integration&lt;/li&gt;
&lt;li&gt;Fixes for the regressions introduced in version 2.0.50:&lt;ul&gt;
&lt;li&gt;Ensure all HTML documents are encoded in UTF-8&lt;/li&gt;
&lt;li&gt;Send default User-Agent and HTTP caching headers when making HTTP requests&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Allow Youtube links to be opened outside the &lt;code&gt;iframe&lt;/code&gt; (avoid &lt;code&gt;ERR_BLOCKED_BY_RESPONSE&lt;/code&gt; error)&lt;/li&gt;
&lt;li&gt;Fix inaccessible metrics endpoint when listening on Unix socket&lt;/li&gt;
&lt;li&gt;Allow renaming and moving feed at the same time in the Google Reader API&lt;/li&gt;
&lt;li&gt;Log &lt;code&gt;nb_jobs&lt;/code&gt; only when number of jobs is larger than 0 in background scheduler&lt;/li&gt;
&lt;li&gt;Deduplicate feed URLs when parsing HTML document during discovery process&lt;/li&gt;
&lt;li&gt;Calculate a virtual weekly count based on the average updating frequency (&lt;code&gt;POLLING_SCHEDULER=entry_frequency&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Update GitHub Actions workflow to be able to run the linter and tests on-demand&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;SCHEDULER_ROUND_ROBIN_MIN_INTERVAL&lt;/code&gt; config option&lt;/li&gt;
&lt;li&gt;Add links to GitHub for the commit hash and the version in the about page&lt;/li&gt;
&lt;li&gt;Use "starred" rather than "bookmarked" in English translation&lt;/li&gt;
&lt;li&gt;Update Chinese (CN &amp;amp; TW) translation&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/google/uuid&lt;/code&gt; from &lt;code&gt;1.4.0&lt;/code&gt; to &lt;code&gt;1.5.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/coreos/go-oidc/v3&lt;/code&gt; from &lt;code&gt;3.7.0&lt;/code&gt; to &lt;code&gt;3.9.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/tdewolff/minify/v2&lt;/code&gt; from &lt;code&gt;2.20.6&lt;/code&gt; to &lt;code&gt;2.20.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/go-webauthn/webauthn&lt;/code&gt; from &lt;code&gt;0.8.6&lt;/code&gt; to &lt;code&gt;0.9.4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;golang.org/x/oauth2&lt;/code&gt; from &lt;code&gt;0.14.0&lt;/code&gt; to &lt;code&gt;0.15.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/miniflux/v2/releases/tag/2.0.51" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/miniflux/v2/releases/tag/2.1.0</id>
    <title>New release for Miniflux: Miniflux 2.1.0</title>
    <updated>2024-02-17T16:20:56-05:00</updated>
    <author>
      <name>miniflux/v2</name>
    </author>
    <content>&lt;ul&gt;
&lt;li&gt;Add Linkwarden integration&lt;/li&gt;
&lt;li&gt;Add LinkAce integration&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;FORCE_REFRESH_INTERVAL&lt;/code&gt; config option&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;item-meta-info-reading-time&lt;/code&gt; CSS class&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;add_dynamic_iframe&lt;/code&gt; rewrite function&lt;/li&gt;
&lt;li&gt;Add attribute &lt;code&gt;data-original-mos&lt;/code&gt; to &lt;code&gt;add_dynamic_image&lt;/code&gt; rewrite candidates&lt;/li&gt;
&lt;li&gt;Update entry processor to allow blocking/keeping entries by tags and/or authors&lt;/li&gt;
&lt;li&gt;Change default &lt;code&gt;Accept&lt;/code&gt; header when fetching feeds&lt;/li&gt;
&lt;li&gt;Rewrite relative RSS Bridge URL to absolute URL&lt;/li&gt;
&lt;li&gt;Use numeric user ID in Alpine and distroless container image (avoid &lt;code&gt;securityContext&lt;/code&gt; error in Kubernetes)&lt;/li&gt;
&lt;li&gt;Always try to use HTTP/2 when fetching feeds if available&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;type&lt;/code&gt; attribute in OPML export as per OPML 2.0 specs&lt;/li&gt;
&lt;li&gt;Fix missing translation argument for the key &lt;code&gt;error.unable_to_parse_feed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fix Debian package builder when using Go 1.22 and &lt;code&gt;armhf&lt;/code&gt; architecture&lt;/li&gt;
&lt;li&gt;Fix typo in log message&lt;/li&gt;
&lt;li&gt;Fix incorrect label shown when saving an article&lt;/li&gt;
&lt;li&gt;Fix incorrect condition in refresh feeds cli&lt;/li&gt;
&lt;li&gt;Fix incorrect label &lt;code&gt;for&lt;/code&gt; attribute&lt;/li&gt;
&lt;li&gt;Add missing label ID for custom CSS field&lt;/li&gt;
&lt;li&gt;Accessibility improvements:&lt;ul&gt;
&lt;li&gt;Add workaround for macOS VoiceOver that didn't announce &lt;code&gt;details&lt;/code&gt; and &lt;code&gt;summary&lt;/code&gt; when expanded&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;alert&lt;/code&gt; role to alert message element&lt;/li&gt;
&lt;li&gt;Add a &lt;code&gt;h2&lt;/code&gt; heading to the article element so that the screen reader users can navigate the article through the heading level&lt;/li&gt;
&lt;li&gt;Add an &lt;code&gt;aria-label&lt;/code&gt; attribute for the article element for screen readers&lt;/li&gt;
&lt;li&gt;Remove the icon image &lt;code&gt;alt&lt;/code&gt; attribute in feeds list to prevent screen reader to announce it before entry title&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;sr-only&lt;/code&gt; CSS class for screen reader users (provides more context)&lt;/li&gt;
&lt;li&gt;Differentiate between buttons and links&lt;/li&gt;
&lt;li&gt;Change links that could perform actions to buttons&lt;/li&gt;
&lt;li&gt;Improve translation of hidden Aria elements&lt;/li&gt;
&lt;li&gt;Remove the redundant article role&lt;/li&gt;
&lt;li&gt;Add a search landmark for the search form so that the screen reader users can navigate to it&lt;/li&gt;
&lt;li&gt;Add skip to content link&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;nav&lt;/code&gt; landmark to page header links&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Limit feed/category entry pagination to unread entries when coming from unread entry list&lt;/li&gt;
&lt;li&gt;Update German translation&lt;/li&gt;
&lt;li&gt;Update GitHub Actions to Go 1.22&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;golang.org/x/term&lt;/code&gt; from &lt;code&gt;0.16.0&lt;/code&gt; to &lt;code&gt;0.17.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/google/uuid&lt;/code&gt; from &lt;code&gt;1.5.0&lt;/code&gt; to &lt;code&gt;1.6.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/yuin/goldmark&lt;/code&gt; from &lt;code&gt;1.6.0&lt;/code&gt; to &lt;code&gt;1.7.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;golang.org/x/oauth2&lt;/code&gt; from &lt;code&gt;0.15.0&lt;/code&gt; to &lt;code&gt;0.17.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/tdewolff/minify/v2&lt;/code&gt; from &lt;code&gt;2.20.10&lt;/code&gt; to &lt;code&gt;2.20.12&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;golang.org/x/term&lt;/code&gt; from &lt;code&gt;0.15.0&lt;/code&gt; to &lt;code&gt;0.16.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/prometheus/client_golang&lt;/code&gt; from &lt;code&gt;1.17.0&lt;/code&gt; to &lt;code&gt;1.18.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/tdewolff/minify/v2&lt;/code&gt; from &lt;code&gt;2.20.9&lt;/code&gt; to &lt;code&gt;2.20.16&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;golang.org/x/crypto&lt;/code&gt; from &lt;code&gt;0.16.0&lt;/code&gt; to &lt;code&gt;0.19.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/go-webauthn/webauthn&lt;/code&gt; from &lt;code&gt;0.9.4&lt;/code&gt; to&lt;code&gt;0.10.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;golang.org/x/net&lt;/code&gt; from &lt;code&gt;0.20.0&lt;/code&gt; to &lt;code&gt;0.21.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/miniflux/v2/releases/tag/2.1.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/miniflux/v2/releases/tag/2.1.1</id>
    <title>New release for Miniflux: Miniflux 2.1.1</title>
    <updated>2024-03-10T14:58:06-04:00</updated>
    <author>
      <name>miniflux/v2</name>
    </author>
    <content>&lt;ul&gt;
&lt;li&gt;Move search form to a dedicated page&lt;/li&gt;
&lt;li&gt;Add Readeck integration&lt;/li&gt;
&lt;li&gt;Add feed option to disable HTTP/2 to avoid fingerprinting&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;Enter&lt;/code&gt; key as a hotkey to open selected item&lt;/li&gt;
&lt;li&gt;Proxify &lt;code&gt;video&lt;/code&gt; element &lt;code&gt;poster&lt;/code&gt; attribute&lt;/li&gt;
&lt;li&gt;Add a couple of new possible locations for feeds&lt;ul&gt;
&lt;li&gt;Hugo likes to generate &lt;code&gt;index.xml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feed.atom&lt;/code&gt; and &lt;code&gt;feed.rss&lt;/code&gt; are used by enterprise-scale/old-school gigantic CMS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fix categories import from Thunderbird's OPML&lt;/li&gt;
&lt;li&gt;Fix logo misalignment when using languages that are more verbose than English&lt;/li&gt;
&lt;li&gt;Google Reader: Do not return a 500 error when no items is returned&lt;/li&gt;
&lt;li&gt;Handle RDF feeds with duplicated &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; elements&lt;/li&gt;
&lt;li&gt;Sort integrations alphabetically&lt;/li&gt;
&lt;li&gt;Add more URL validation in media proxy&lt;/li&gt;
&lt;li&gt;Add unit test to ensure each translation has the correct number of plurals&lt;/li&gt;
&lt;li&gt;Add missing plurals for some languages&lt;/li&gt;
&lt;li&gt;Makefile: quiet &lt;code&gt;git describe&lt;/code&gt; and &lt;code&gt;rev-parse&lt;/code&gt; stderr: When building from a tarball instead of a cloned git repo, there would be two &lt;code&gt;fatal: not a git repository&lt;/code&gt; errors emitted even though the build succeeds. This is because of how &lt;code&gt;VERSION&lt;/code&gt; and &lt;code&gt;COMMIT&lt;/code&gt; are set in the Makefile. This PR suppresses the stderr for these variable assignments.&lt;/li&gt;
&lt;li&gt;Makefile: do not force &lt;code&gt;CGO_ENABLED=0&lt;/code&gt; for &lt;code&gt;miniflux&lt;/code&gt; target&lt;/li&gt;
&lt;li&gt;Add GitHub Action pipeline to build packages on-demand&lt;/li&gt;
&lt;li&gt;Remove Golint (deprecated), use &lt;code&gt;staticcheck&lt;/code&gt; and &lt;code&gt;golangci-lint&lt;/code&gt; instead&lt;/li&gt;
&lt;li&gt;Build amd64/arm64 Debian packages with CGO disabled&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;go.mod&lt;/code&gt; and add &lt;code&gt;.exe&lt;/code&gt; suffix to Windows binary&lt;/li&gt;
&lt;li&gt;Add a couple of fuzzers&lt;/li&gt;
&lt;li&gt;Fix CodeQL workflow&lt;/li&gt;
&lt;li&gt;Code and performance improvements:&lt;ul&gt;
&lt;li&gt;Use an &lt;code&gt;io.ReadSeeker&lt;/code&gt; instead of an &lt;code&gt;io.Reader&lt;/code&gt; to parse feeds&lt;/li&gt;
&lt;li&gt;Speed up the sanitizer:&lt;ul&gt;
&lt;li&gt;Allow Youtube URLs to start with &lt;code&gt;www&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;strings.Builder&lt;/code&gt; instead of a &lt;code&gt;bytes.Buffer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use a &lt;code&gt;strings.NewReader&lt;/code&gt; instead of a &lt;code&gt;bytes.NewBufferString&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sprinkles a couple of &lt;code&gt;continue&lt;/code&gt; to make the code-flow more obvious&lt;/li&gt;
&lt;li&gt;Inline calls to &lt;code&gt;inList&lt;/code&gt;, and put their parameters in the right order&lt;/li&gt;
&lt;li&gt;Simplify &lt;code&gt;isPixelTracker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Simplify &lt;code&gt;isValidIframeSource&lt;/code&gt;, by extracting the hostname and comparing it directly, instead of using the full url and checking if it starts with multiple variations of the same one (&lt;code&gt;//&lt;/code&gt;, &lt;code&gt;http:&lt;/code&gt;, &lt;code&gt;https://&lt;/code&gt; multiplied by &lt;code&gt;/www.&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Add a benchmark&lt;/li&gt;
&lt;li&gt;Instead of having to allocate a ~100 keys map containing possibly dynamic values (at least to the go compiler), allocate it once in a global variable. This significantly speeds things up, by reducing the garbage&lt;/li&gt;
&lt;li&gt;Use constant time access for maps instead of iterating on them&lt;/li&gt;
&lt;li&gt;Build a ~large whitelist map inline instead of constructing it item by item (and remove a duplicate key/value pair)&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;slices&lt;/code&gt; instead of hand-rolled loops
collector/allocator involvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Reuse a &lt;code&gt;Reader&lt;/code&gt; instead of copying to a buffer when parsing an Atom feed&lt;/li&gt;
&lt;li&gt;Preallocate memory when exporting to OPML: This should marginally increase performance when exporting a large amount of feeds to OPML&lt;/li&gt;
&lt;li&gt;Delay call of &lt;code&gt;view.New&lt;/code&gt; after logging the user in: There is no need to do extra work like creating a session and its associated view until the user has been properly identified and as many possibly-failing sql request have been successfully run&lt;/li&gt;
&lt;li&gt;Use constant-time comparison for anti-csrf tokens: This is probably completely overkill, but since anti-csrf tokens are secrets, they should be compared against untrusted inputs in constant time&lt;/li&gt;
&lt;li&gt;Simplify and optimize &lt;code&gt;genericProxyRewriter&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Reduce the amount of nested loops: it's preferable to search the whole page once and filter on it (even with filters that should always be false), than searching it again for every element we're looking for.&lt;/li&gt;
&lt;li&gt;Factorize the proxying conditions into a &lt;code&gt;shouldProxy&lt;/code&gt; function to reduce the copy-pasta.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Speed up &lt;code&gt;removeUnlikelyCandidates&lt;/code&gt;: &lt;code&gt;.Not&lt;/code&gt; returns a brand new &lt;code&gt;Selection&lt;/code&gt;, copied element by element&lt;/li&gt;
&lt;li&gt;Improve &lt;code&gt;EstimateReadingTime&lt;/code&gt;'s speed by a factor 7&lt;ul&gt;
&lt;li&gt;Refactorise the tests and add some&lt;/li&gt;
&lt;li&gt;Use 250 signs instead of the whole text&lt;/li&gt;
&lt;li&gt;Only check for Korean, Chinese and Japanese script&lt;/li&gt;
&lt;li&gt;Add a benchmark&lt;/li&gt;
&lt;li&gt;Use a more idiomatic control flow&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Don't compute reading-time when unused: If the user doesn't display reading times, there is no need to compute them. This should speed things up a bit, since &lt;code&gt;whatlanggo.Detect&lt;/code&gt; is abysmally slow.&lt;/li&gt;
&lt;li&gt;Simplify &lt;code&gt;username&lt;/code&gt; generation for the integration tests: No need to generate random numbers 10 times, generate a single big-enough one. A single int64 should be more than enough&lt;/li&gt;
&lt;li&gt;Add missing regex anchor detected by CodeQL&lt;/li&gt;
&lt;li&gt;Don't mix up slices capacity and length&lt;/li&gt;
&lt;li&gt;Use prepared statements for intervals, &lt;code&gt;ArchiveEntries&lt;/code&gt; and &lt;code&gt;updateEnclosures&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use modern for-loops introduced with Go 1.22&lt;/li&gt;
&lt;li&gt;Remove a superfluous condition: No need to check if the length of &lt;code&gt;line&lt;/code&gt; is positive since we're checking afterwards that it contains the &lt;code&gt;=&lt;/code&gt; sign&lt;/li&gt;
&lt;li&gt;Close resources as soon as possible, instead of using &lt;code&gt;defer()&lt;/code&gt; in a loop&lt;/li&gt;
&lt;li&gt;Remove superfluous escaping in a regex&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;strings.ReplaceAll&lt;/code&gt; instead of &lt;code&gt;strings.Replace(…, -1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;strings.EqualFold&lt;/code&gt; instead of &lt;code&gt;strings.ToLower(…) ==&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;.WriteString(&lt;/code&gt; instead of &lt;code&gt;.Write([]byte(…&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;%q&lt;/code&gt; instead of &lt;code&gt;"%s"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make &lt;code&gt;internal/worker/worker.go&lt;/code&gt; read-only&lt;/li&gt;
&lt;li&gt;Use a switch-case construct in &lt;code&gt;internal/locale/plural.go&lt;/code&gt; instead of an avalanche of &lt;code&gt;if&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Template functions: simplify &lt;code&gt;formatFileSize&lt;/code&gt; and &lt;code&gt;duration&lt;/code&gt; implementation&lt;/li&gt;
&lt;li&gt;Inline some templating functions&lt;/li&gt;
&lt;li&gt;Make use of &lt;code&gt;printer.Print&lt;/code&gt; when possible&lt;/li&gt;
&lt;li&gt;Add a &lt;code&gt;printer.Print&lt;/code&gt; to &lt;code&gt;internal/locale/printer.go&lt;/code&gt;: No need to use variadic functions with string format interpolation to generate static strings&lt;/li&gt;
&lt;li&gt;Minor code simplification in &lt;code&gt;internal/ui/view/view.go&lt;/code&gt;: No need to create the map item by item when we can create it in one go&lt;/li&gt;
&lt;li&gt;Build the map inline in &lt;code&gt;CountAllFeeds()&lt;/code&gt;: No need to build an empty map to then add more fields in it one by one&lt;/li&gt;
&lt;li&gt;Miscellaneous improvements to &lt;code&gt;internal/reader/subscription/finder.go&lt;/code&gt;:&lt;ul&gt;
&lt;li&gt;Surface &lt;code&gt;localizedError&lt;/code&gt; in &lt;code&gt;FindSubscriptionsFromWellKnownURLs&lt;/code&gt; via &lt;code&gt;slog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use an inline declaration for new subscriptions, like done elsewhere in the
file, if only for consistency's sake&lt;/li&gt;
&lt;li&gt;Preallocate the &lt;code&gt;subscriptions&lt;/code&gt; slice when using an RSS-bridge,&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use an update-where for &lt;code&gt;MarkCategoryAsRead&lt;/code&gt; instead of a subquery&lt;/li&gt;
&lt;li&gt;Simplify &lt;code&gt;CleanOldUserSessions&lt;/code&gt;' query: No need for a subquery, filtering on &lt;code&gt;created_at&lt;/code&gt; directly is enough&lt;/li&gt;
&lt;li&gt;Simplify &lt;code&gt;cleanupEntries&lt;/code&gt;' query&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NOT (hash=ANY(%4))&lt;/code&gt; can be expressed as &lt;code&gt;hash NOT IN $4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;There is no need for a subquery operating on the same table, moving the conditions out is equivalent.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Reformat &lt;code&gt;ArchiveEntries&lt;/code&gt;'s query for consistency's sake and replace the &lt;code&gt;=ANY&lt;/code&gt; with an &lt;code&gt;IN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Reformat the query in &lt;code&gt;GetEntryIDs&lt;/code&gt; and &lt;code&gt;GetReadTime&lt;/code&gt;'s query for consistency's sake&lt;/li&gt;
&lt;li&gt;Simplify &lt;code&gt;WeeklyFeedEntryCount&lt;/code&gt;: No need for a &lt;code&gt;BETWEEN&lt;/code&gt;: we want to filter on entries published in the last week, no need to express is as "entries published between now and last week", "entries published after last week" is enough&lt;/li&gt;
&lt;li&gt;Add some tests for &lt;code&gt;add_image_title&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Remove &lt;code&gt;github.com/google/uuid&lt;/code&gt; dependencies: Replace it with a hand-rolled implementation. Heck, an UUID isn't even a requirement according to Omnivore API docs&lt;/li&gt;
&lt;li&gt;Simplify &lt;code&gt;internal/reader/icon/finder.go&lt;/code&gt;:&lt;ul&gt;
&lt;li&gt;Use a simple regex to parse data uri instead of a hand-rolled parser, and document what fields are considered mandatory.&lt;/li&gt;
&lt;li&gt;Use case-insensitive matching to find (fav)icons, instead of doing the same query twice with different letter cases&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;apple-touch-icon-precomposed.png&lt;/code&gt; as a fallback &lt;code&gt;favicon&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Reorder the queries to have &lt;code&gt;icon&lt;/code&gt; first, since it seems to be the most popular one. It used to be last, meaning that pages had to be parsed completely 4 times, instead of one now.&lt;/li&gt;
&lt;li&gt;Minor factorisation in &lt;code&gt;findIconURLsFromHTMLDocument&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Small refactoring of &lt;code&gt;internal/reader/date/parser.go&lt;/code&gt;:&lt;ul&gt;
&lt;li&gt;Split dates formats into those that require local times and those who don't, so that there is no need to have a switch-case in the for loop with around 250 iterations at most.&lt;/li&gt;
&lt;li&gt;Be more strict when it comes to timezones, previously invalid ones like -13 were accepted. Also add a test for this.&lt;/li&gt;
&lt;li&gt;Bail out early if the date is an empty string.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make use of Go ≥ 1.21 slices package instead of hand-rolled loops&lt;/li&gt;
&lt;li&gt;Reorder the fields of the &lt;code&gt;Entry&lt;/code&gt; struct to save some memory&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dependencies update:&lt;ul&gt;
&lt;li&gt;Bump &lt;code&gt;golang.org/x/oauth2&lt;/code&gt; from &lt;code&gt;0.17.0&lt;/code&gt; to &lt;code&gt;0.18.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/prometheus/client_golang&lt;/code&gt; from &lt;code&gt;1.18.0&lt;/code&gt; to &lt;code&gt;1.19.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/tdewolff/minify/v2&lt;/code&gt; from &lt;code&gt;2.20.16&lt;/code&gt; to &lt;code&gt;2.20.18&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/PuerkitoBio/goquery&lt;/code&gt; from &lt;code&gt;1.8.1&lt;/code&gt; to &lt;code&gt;1.9.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;golang.org/x/crypto&lt;/code&gt; from &lt;code&gt;0.19.0&lt;/code&gt; to &lt;code&gt;0.20.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/go-jose/go-jose/v3&lt;/code&gt; from &lt;code&gt;3.0.1&lt;/code&gt; to &lt;code&gt;3.0.3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/miniflux/v2/releases/tag/2.1.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/miniflux/v2/releases/tag/2.1.2</id>
    <title>New release for Miniflux: Miniflux 2.1.2</title>
    <updated>2024-03-30T18:08:42-04:00</updated>
    <author>
      <name>miniflux/v2</name>
    </author>
    <content>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;api&lt;/code&gt;: rewrite API integration tests without build tags&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ci&lt;/code&gt;: add basic ESLinter checks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ci&lt;/code&gt;: enable go-critic linter and fix various issues detected&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ci&lt;/code&gt;: fix JavaScript linter path in GitHub Actions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cli&lt;/code&gt;: avoid misleading error message when creating an admin user automatically&lt;/li&gt;
&lt;li&gt;&lt;code&gt;config&lt;/code&gt;: add &lt;code&gt;FILTER_ENTRY_MAX_AGE_DAYS&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;&lt;code&gt;config&lt;/code&gt;: bump the number of simultaneous workers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;config&lt;/code&gt;: rename &lt;code&gt;PROXY_*&lt;/code&gt; options to &lt;code&gt;MEDIA_PROXY_*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;config&lt;/code&gt;: use &lt;code&gt;crypto.GenerateRandomBytes&lt;/code&gt; instead of doing it by hand&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http/request&lt;/code&gt;: refactor conditions to be more idiomatic&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http/response&lt;/code&gt;: remove legacy &lt;code&gt;X-XSS-Protection&lt;/code&gt; header&lt;/li&gt;
&lt;li&gt;&lt;code&gt;integration/rssbrige&lt;/code&gt;: fix rssbrige import&lt;/li&gt;
&lt;li&gt;&lt;code&gt;integration/shaarli&lt;/code&gt;: factorize the header+payload concatenation as data&lt;/li&gt;
&lt;li&gt;&lt;code&gt;integration/shaarli&lt;/code&gt;: no need to base64-encode then remove the padding when we can simply encode without padding&lt;/li&gt;
&lt;li&gt;&lt;code&gt;integration/shaarli&lt;/code&gt;: the JWT token was declared as using HS256 as algorithm, but was using HS512&lt;/li&gt;
&lt;li&gt;&lt;code&gt;integration/webhook&lt;/code&gt;: add category title to request body&lt;/li&gt;
&lt;li&gt;&lt;code&gt;locale&lt;/code&gt;: update Turkish translations&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man page&lt;/code&gt;: sort config options in alphabetical order&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mediaproxy&lt;/code&gt;: reduce the internal indentation of &lt;code&gt;ProxifiedUrl&lt;/code&gt; by inverting some conditions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mediaproxy&lt;/code&gt;: simplify and refactor the package&lt;/li&gt;
&lt;li&gt;&lt;code&gt;model&lt;/code&gt;: replace&lt;code&gt;Optional{Int,Int64,Float64}&lt;/code&gt; with a generic function &lt;code&gt;OptionalNumber()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;model&lt;/code&gt;: use struct embedding for &lt;code&gt;FeedCreationRequestFromSubscriptionDiscovery&lt;/code&gt; to reduce code duplication&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/atom&lt;/code&gt;: avoid debug message when the date is empty&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/atom&lt;/code&gt;: change &lt;code&gt;if !a { a = } if !a {a = }&lt;/code&gt; constructs into &lt;code&gt;if !a { a = ; if !a {a = }}&lt;/code&gt; to reduce the number of comparisons and improve readability&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/atom&lt;/code&gt;: Move the population of the feed's entries into a new function, to make BuildFeed easier to understand/separate concerns/implementation details&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/atom&lt;/code&gt;: refactor Atom parser to use an adapter&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/atom&lt;/code&gt;: use &lt;code&gt;sort+compact&lt;/code&gt; instead of &lt;code&gt;compact+sort&lt;/code&gt; to remove duplicates&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/atom&lt;/code&gt;: when detecting the format, detect its version as well&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/encoding&lt;/code&gt;: inline a one-liner function&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/handler&lt;/code&gt;: fix force refresh feature&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/json&lt;/code&gt;: refactor JSON Feed parser to use an adapter&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/media&lt;/code&gt;: remove a superfluous error-check: &lt;code&gt;strconv.ParseInt&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt; when passed an empty string&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/media&lt;/code&gt;: simplify switch-case by moving a common condition above it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/processor&lt;/code&gt;: compile block/keep regex only once per feed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/rdf&lt;/code&gt;: refactor RDF parser to use an adapter&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/rewrite&lt;/code&gt;: inline some one-line functions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/rewrite&lt;/code&gt;: simplify &lt;code&gt;removeClickbait&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/rewrite&lt;/code&gt;: transform a free-standing function into a method&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/rewrite&lt;/code&gt;: use a proper constant instead of a magic number in &lt;code&gt;applyFuncOnTextContent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/rss&lt;/code&gt;: add support for &lt;code&gt;&amp;lt;media:category&amp;gt;&lt;/code&gt; element&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/rss&lt;/code&gt;: don't add empty tags to RSS items&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/rss&lt;/code&gt;: refactor RSS parser to use a default namespace to avoid some limitations of the Go XML parser&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/rss&lt;/code&gt;: refactor RSS Parser to use an adapter&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader/rss&lt;/code&gt;: remove some duplicated code in RSS parser&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader&lt;/code&gt;: ensure that enclosure URLs are always absolute&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader&lt;/code&gt;: move iTunes and GooglePlay XML definitions to their own packages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader&lt;/code&gt;: parse podcast categories&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reader&lt;/code&gt;: remove trailing space in &lt;code&gt;SiteURL&lt;/code&gt; and &lt;code&gt;FeedURL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: do not store empty tags&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: simplify &lt;code&gt;removeDuplicates()&lt;/code&gt; to use a &lt;code&gt;sort&lt;/code&gt;+&lt;code&gt;compact&lt;/code&gt; construct instead of doing it by hand with a hashmap&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Use plain strings concatenation instead of building an array and then joining it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timezone&lt;/code&gt;: make sure the tests pass when the timezone database is not installed on the host&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/css&lt;/code&gt;: align &lt;code&gt;min-width&lt;/code&gt; with the other &lt;code&gt;min-width&lt;/code&gt; values&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/css&lt;/code&gt;: fix regression: "Add to Home Screen" button is unreadable&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: don't use lambdas to return a function, use directly the function instead&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: enable trusted-types&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: fix download button loading label&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: fix JavaScript error on the login page when the user not authenticated&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: inline one-line functions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: inline some &lt;code&gt;querySelectorAll&lt;/code&gt; calls&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: reduce the scope of some variables&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: remove a hack for "Chrome 67 and earlier" since it was released in 2018&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: replace &lt;code&gt;DomHelper.findParent&lt;/code&gt; with &lt;code&gt;.closest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: replace &lt;code&gt;let&lt;/code&gt; with &lt;code&gt;const&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: simplify &lt;code&gt;DomHelper.getVisibleElements&lt;/code&gt; by using a &lt;code&gt;filter&lt;/code&gt; instead of a loop with an index&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: use a &lt;code&gt;Set&lt;/code&gt; instead of an array in a &lt;code&gt;KeyboardHandler&lt;/code&gt;'s member&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/js&lt;/code&gt;: use some ternaries where it makes sense&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/static&lt;/code&gt;: make use of &lt;code&gt;HashFromBytes&lt;/code&gt; everywhere&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui/static&lt;/code&gt;: set minifier ECMAScript version&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui&lt;/code&gt;: add keyboard shortcuts for scrolling to top/bottom of the item list&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui&lt;/code&gt;: add media player control playback speed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui&lt;/code&gt;: remove unused variables and improve JSON decoding in &lt;code&gt;saveEnclosureProgression()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;validator&lt;/code&gt;: display an error message on edit feed page when the feed URL is not unique&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/coreos/go-oidc/v3&lt;/code&gt; from &lt;code&gt;3.9.0&lt;/code&gt; to &lt;code&gt;3.10.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/go-webauthn/webauthn&lt;/code&gt; from &lt;code&gt;0.10.1&lt;/code&gt; to &lt;code&gt;0.10.2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;github.com/tdewolff/minify/v2&lt;/code&gt; from &lt;code&gt;2.20.18&lt;/code&gt; to &lt;code&gt;2.20.19&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bump &lt;code&gt;google.golang.org/protobuf&lt;/code&gt; from &lt;code&gt;1.32.0&lt;/code&gt; to &lt;code&gt;1.33.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/miniflux/v2/releases/tag/2.1.2" rel="alternate"/>
  </entry>
</feed>
